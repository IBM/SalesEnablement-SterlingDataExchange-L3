{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the IBM Sterling Data Exchange Level 3 demonstration guide! The goal of this demonstration guide is to provide sellers and technical sellers from IBM and Business Partners with the knowledge and tools to perform hands-on demonstrations of IBM Sterling Data Exchange. Throughout this demonstration guide IBM Sterling Data Exchange will be referred to as PEM. While everyone is encouraged to complete all sections of the demonstration guide, actual completion requirements vary by role: IBM Sales: Complete Use Cases XXXXXXX of this demonstration guide Record and submit a Stand and Deliver demonstration to be evaluated by management (details in the Your Learning plan) IBM Technical Sales: Complete all of this demonstration guide Record and submit a Stand and Deliver demonstration to be evaluated by management (details in the Your Learning plan) Business Partner Sales: Complete Use Cases XXXXXXX of this demonstration guide Successfully pass a 5 question quiz found in the learn.ibm.com plan Business Partner Sales: Complete all Acts of this demonstration guide Successfully pass a 5 question quiz found in the learn.ibm.com plan IBM Sales and Tech Sales must develop and record a Stand & Deliver presentation. This video is intended to simulate delivery of a \u201clive\u201d demo in front of a client \u2014 on camera. IBMers will have flexibility in defining a hypothetical client, the pain points the client has, and the goals they aspire to achieve. The recording will then cover the seller\u2019s hands-on demonstration and pitch to the client of the value of the IBM solution using the environment and techniques of this lab. Specific criteria that must be demonstrated as part of the Stand & Deliver recordings is provided within the documentation that accompanies the Level 3 course in Your Learning. Business Partners must pass an accreditation quiz after completing the hands-on portion of the course. The quiz consists of multiple choice questions, with four possible responses (and only one correct answer) for each question. Hint: keep the demonstration guide and the associated IBM Technology Zone (TechZone) environment active while completing the quiz. Before jumping to part 1, please read the guidance below. Reading and understanding the information will save time while completing the steps in this guide. Helpful tips for using this demonstration guide and environment The IBM Sterling Data Exchange - Level 3 Demonstration Guide is organized in parts and sub-parts or chapters. Most chapters contain numbered steps, which are actions to be performed. Throughout the guide, images are used to help guide students through the demonstration. Warning The IBM Sterling Data Exchange user interface and data changes on a regular basis. Images captured in this guide may differ from the live demonstration environment in TechZone. The following styles of highlighting are utilized in images: Action highlight box: Illustrates where to click, enter, or select an item: Path/explore highlight box: Illustrates one of two things: the path to follow to get to a specific location in the user interface areas to explore To assist in navigating the browser-based user interface (UI), a birds-eye view of the UI is often provided. Expand these views by clicking on the > icon of the expandable section of documentation. Birds-eye view Copy to clipboard box: The text is copied to the clipboard. Click the copy icon (highlighted below) and then paste using the operating systems paste function, for example, entering Ctrl +v , Cmd +v , or right-click and select paste. Additionally, throughout the demonstration guide there are sample narration scripts. The short narratives can be utilized when performing client facing demonstrations. Acronyms The following acronyms are used throughout this demonstration guide: - Applicability Statement 2 (AS2)) - Application programming interfaces (APIs) - Artificial Intelligence (AI) - Business to Business Integrator (B2Bi) - Electronic Data Interchange (EDI) - IBM Sterling Partner Engagement Manager (PEM) - IBM Technology Zone (ITZ) - Virtual Machine (VM) It is now time to proceed to Part 1, an overview of IBM Sterling Data Exchange.","title":"Introduction"},{"location":"#helpful-tips-for-using-this-demonstration-guide-and-environment","text":"The IBM Sterling Data Exchange - Level 3 Demonstration Guide is organized in parts and sub-parts or chapters. Most chapters contain numbered steps, which are actions to be performed. Throughout the guide, images are used to help guide students through the demonstration. Warning The IBM Sterling Data Exchange user interface and data changes on a regular basis. Images captured in this guide may differ from the live demonstration environment in TechZone. The following styles of highlighting are utilized in images: Action highlight box: Illustrates where to click, enter, or select an item: Path/explore highlight box: Illustrates one of two things: the path to follow to get to a specific location in the user interface areas to explore To assist in navigating the browser-based user interface (UI), a birds-eye view of the UI is often provided. Expand these views by clicking on the > icon of the expandable section of documentation. Birds-eye view Copy to clipboard box: The text is copied to the clipboard. Click the copy icon (highlighted below) and then paste using the operating systems paste function, for example, entering Ctrl +v , Cmd +v , or right-click and select paste. Additionally, throughout the demonstration guide there are sample narration scripts. The short narratives can be utilized when performing client facing demonstrations.","title":"Helpful tips for using this demonstration guide and environment"},{"location":"#acronyms","text":"The following acronyms are used throughout this demonstration guide: - Applicability Statement 2 (AS2)) - Application programming interfaces (APIs) - Artificial Intelligence (AI) - Business to Business Integrator (B2Bi) - Electronic Data Interchange (EDI) - IBM Sterling Partner Engagement Manager (PEM) - IBM Technology Zone (ITZ) - Virtual Machine (VM) It is now time to proceed to Part 1, an overview of IBM Sterling Data Exchange.","title":"Acronyms"},{"location":"NextSteps/","text":"This guide provided information to assist IBM and Business Partner sellers and technical sellers in demonstrating IBM Sterling Data Exchange. Links to specific PEM topics were provided throughout this demonstration guide. Take the time to read the official IBM Sterling Data Exchange documentation to learn the full capabilities of the offering. Note, similar demonstration of PEM are available on IBM Technology Zone here . Finally, remember to complete the IBM Sterling Data Exchange Level 3 learning plan in either YourLearning (IBM employees) or learn.ibm.com (Business Partners). IBM Sales and IBM Technical sales must complete a Stand and Deliver exercise to validate their ability to demonstrate IBM Sterling Data Exchange to potential clients. Refer to the evaluation rubric in the learning plan when preparing the Stand and Deliver. Business Partners (both sellers and technical sellers) must pass the IBM Sterling Data Exchange Level 3 quiz from learn.ibm.com. Remember, take the quiz while the reservation to the TechZone environment is active. The Business Partner quiz verifies use of the demonstration environment and not general knowledge of the offering.","title":"Next Steps"},{"location":"Part%201/01%20Introduction/","text":"IBM Sterling Data Exchange ... In this demonstration, XXXXXXX This demonstration assumes users have at least basic knowledge of IBM Sterling Data Exchange. Before proceeding, it is highly encouraged that users complete the IBM Sterling Data Exchange Level 2 learning plan. The plan is accessible to IBM employees here and Business Partners here . The demonstration is divided into XXXXXXX parts: Use Case 1 - In Use Case 1 , explore how to on-board a new partner using the Applicability Statement 2 (AS2) Protocol. Use Case 2 - The video below provides a sample introduction to the demonstration. XXXXXXX maybe point to the collection demo if they get the link fixed! XXXXXXX Before proceeding to the actual demonstration, a few preparation steps must be complete first to configure the demonstration environment in IBM Technology Zone.","title":"The Demonstration"},{"location":"Part%201/02%20DemoPreparation/","text":"This demonstration requires two IBM Technology Zone (ITZ) environments: - Custom ROKS requests: https://techzone.ibm.com/collection/custom-roks-vmware-requests - IBM Cloud VSI (Classic): https://techzone.ibm.com/collection/base-images At this point, all users should have completed the steps in the IBM Sterling Data Exchange Level 3 learning plan to reserve the two environments as described in the IBM Sterling Data Exchange Level 3 Introduction video . Before proceeding, validate that both the reservations have been fully provisioned and are in the Ready state in ITZ. If not, please complete those steps before proceeding. The following steps must be performed before delivering the demonstration. These steps should be performed well in advance of starting an actual client demonstration as it will take approximately 1 hour for all steps to complete. Accept invitation to join the ITZ IBM Cloud account for the Custom ROKS reservation Open the You are invited to join an account in IBM Cloud email received from IBM Cloud and click the Join now link. In the browser window that opens, click the Join Account button. Follow the steps to login to IBM Cloud. On the IBM Cloud Dashboard set the current account to 2112072 - ITZ - V2 . Click the OpenShift icon in the left-hand menu bar. Click Clusters . Click the OpenShift cluster name in the table. Note: the cluster name will be different than seen in the above image. Click the OpenShift web console button. At this time, a page like the one below should be in a new browser window or tab. Leave this window open. It will be used again later. Download the SSH key from the IBM Cloud VSI (Classic) reservations Open a new browser window or tab to the ITZ My reservations page. Click on the IBM Cloud VSI (Classic) reservation tile. Click the Download SSH Key button. Take note Take note of the Public IP , SSH Port , and Username fields in the reservation. These values will be needed later. By default, most browsers will utilize the default Downloads directory in the users home directory. Connect to the Virtual Server Instance (VSI) The next step must be performed on the users local computer. The directions below are specific to users with a Mac computer (MacOS). All instructions listed here should be the same for users running on Linux machines. For Windows machines users. Windows users will need to utilize a ssh client such as putty. XXXXXXX Open a terminal on local desktop computer using Mac Spotlight (press the command key and the space bar). Enter the following command to change to the Downloads directory where the ITZ private key was downloaded. cd Downloads Verify the SSH key file is found in the Downloads directory. ls -l pem-ibmcloudvsi-download.pem Example output -rw-r--r--@ 1 andrewjones staff 3243 Oct 18 13:12 pem-ibmcloudvsi-download.pem No such file or directory? If the file was not found, verify the default download directory of the browser used in step 11 above and try again adjusting for correct download directory. It is also possible the SSH key file name was not saved as pem-ibmcloudvsi-download.pem. Check the Downloads directory for the most recent file names. Change the permissions of the SSH key file. chmod 0600 pem-ibmcloudvsi-download.pem Verify the SSH key file has the proper permissions. ls -l pem-ibmcloudvsi-download.pem Example output -rw-------@ 1 andrewjones staff 3243 Oct 18 13:12 pem-ibmcloudvsi-download.pem Use ssh to connect to the remote VSI and enter yes when prompted to continue. Warning Substitute the strings PORT, USER, and PUBLICIP with the values in the VSI reservation as illustrated in the image in step 11 above. ssh -i pem-ibmcloudvsi-download.pem -p SSHPORT USERNAME@PUBLICIP Example output MacBook-Pro-2:Downloads andrewjones$ ssh -i pem-ibmcloudvsi-download.pem -p 2223 itzuser@169.59.6.211 The authenticity of host '[169.59.6.211]:2223 ([169.59.6.211]:2223)' can't be established. ED25519 key fingerprint is SHA256:YAN8U3PtpCzdhqc67F8ZQWlJjQgBV0DOi7LvZgDEtws. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added '[169.59.6.211]:2223' (ED25519) to the list of known hosts. Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-124-generic x86_64) ... **Long output - truncated in this example** ... To run a command as administrator (user \"root\"), use \"sudo \". See \"man sudo_root\" for details. Install all required IBM Cloud and other tools Use the following command to install all required tools. bash <(curl -sL https://ibm.biz/ocp-cli) Example output Updating the operating system. Wait! Installing Docker. Wait! Adding user to docker group. Wait! Setting up docker to start at reboot. Wait! Installing common utilities. Wait! Installing ibmcloud utility. Wait! Installing Helm. Wait! Installing OpenShift oc utility. Wait! Installing Kubernetes kubectl. Wait! cleaning up. Wait! All done. Client Version: 4.10.0 version.BuildInfo{Version:\"v3.10.1\", GitCommit:\"9f88ccb6aee40b9a0535fcc7efea6055e1ef72c9\", GitTreeState:\"clean\", GoVersion:\"go1.18.7\"} Flag --short has been deprecated, and will be removed in the future. The --short output will become the default. Client Version: v1.25.3 Kustomize Version: v4.5.7 ibmcloud version 2.11.1+c18277d-2022-09-23T21:49:24+00:00 Reboot your instance now: sudo shutdown -r now If the reboot message is not seen If the reboot message is not seen in the output of the previous command a problem occurred. Re-run the last command. When doing so, ignore error messages about items already installed. Restart the VSI. sudo shutdown -r now Example output Connection to PUBLICIP closed by remote host. Connection to PUBLICIP closed. Note, it will take a few minutes for the VSI to reboot. Wait 2 or 3 minutes and then continue the steps below. Download the B2Bi installation scripts Use ssh to re-connect to the remote VSI. Warning Substitute the strings PORT, USER, and PUBLICIP with the values in the VSI reservation as illustrated in the image in step 11 above. ssh -i pem-ibmcloudvsi-download.pem -p SSHPORT USERNAME@PUBLICIP Example output MacBook-Pro-2:Downloads andrewjones$ ssh -i pem-ibmcloudvsi-download.pem -p 2223 itzuser@169.59.6.211 Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-124-generic x86_64) Documentation: https://help.ubuntu.com Management: https://landscape.canonical.com Support: https://ubuntu.com/advantage System information as of Tue Oct 18 19:58:23 UTC 2022 System load: 0.65 Users logged in: 0 Usage of /: 3.0% of 97.26GB IPv4 address for docker0: 172.17.0.1 Memory usage: 7% IPv4 address for eth0: 10.36.166.233 Swap usage: 0% IPv4 address for eth1: 169.59.6.211 Processes: 123 8 updates can be applied immediately. 8 of these updates are standard security updates. To see these additional updates run: apt list --upgradable New release '22.04.1 LTS' available. Run 'do-release-upgrade' to upgrade to it. Last login: Tue Oct 18 19:47:57 2022 from 70.114.143.247 Create a new directory B2Bi installation scripts. mkdir B2Bi Set the PROJECT_DIR environment variable. export PROJECT_DIR=$HOME/b2bi Change directories to PROJECT_DIR . cd $PROJECT_DIR Download the B2Bi installation script. wget -O rapid-lab-b2bi-newlab-61051.zip https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newlab-61051.zip?raw=true Example output --2022-10-18 20:12:56-- https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newdb-61051.zip?raw=true Resolving github.com (github.com)... 140.82.113.4 Connecting to github.com (github.com)|140.82.113.4|:443... connected. HTTP request sent, awaiting response... 302 Found Location: https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-61051.zip [following] --2022-10-18 20:12:56-- https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-61051.zip Reusing existing connection to github.com:443. HTTP request sent, awaiting response... 302 Found Location: https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-61051.zip [following] --2022-10-18 20:12:57-- https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-61051.zip Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 4061226 (3.9M) [application/zip] Saving to: \u2018rapid-lab-b2bi-newlab-61051.zip\u2019 rapid-lab-b2bi-newlab-61051.zip 100%[=========================================================================================================================================>] 3.87M --.-KB/s in 0.03s 2022-10-18 20:12:57 (147 MB/s) - \u2018rapid-lab-b2bi-newlab-61051.zip\u2019 saved [4061226/4061226] Unzip the installation script. unzip rapid-lab-b2bi-newlab-61051.zip Example output Archive: rapid-lab-b2bi-newlab-61051.zip inflating: deploy_mq.sh inflating: edited-values.yaml inflating: prepare_db2.sh inflating: deploy_db2.sh inflating: README.md inflating: COPYING inflating: env.sh inflating: deploy_b2bi.sh inflating: db2jcc4.jar Authenticate to the OpenShift cluster For the next steps, the OpenShift login command to authenticate to the cluster in the ITZ reservation must be retrieved an executed. Switch to the OpenShift web console browser window or tab. Click the IAM identity drop-down menu at top left of the OpenShift web console and click the Copy Login Command option. Click the Display token link. Copy and paste the string in the Log in with this token field. Switch to the SSH terminal window from earlier. Paste the oc login command line copied in step 29 into the terminal window and press enter. Example output itzuser@itz-2700039nft-srv4:~/b2bi$ oc login --token=sha256~XXXXXXXXXXXXXXXXXX --server=https://c103-e.us-south.containers.cloud.ibm.com:31501 Logged into \"https://c103-e.us-south.containers.cloud.ibm.com:31501\" as \"IAM#andrew@jones-tx.com\" using the token provided. You have access to 66 projects, the list has been suppressed. You can list all projects with 'oc projects' Using project \"default\". Welcome! See 'oc help' to get started. itzuser@itz-2700039nft-srv4:~/b2bi$ Run the environment setup and DB2 deploy scripts. . env.sh ; ./deploy_db2.sh Example output Now using project \"db2\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\". You can add applications to this project with the 'new-app' command. For example, try: oc new-app rails-postgresql-example to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application: kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname serviceaccount/db2 created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"db2\" secret/db2-secret created service/db2-ci created service/db2-lb created statefulset.apps/db2 created Note, wait approximately 1 minutes for the DB2 containers to start loading in OpenShift before executing the next step. Verify DB2 is up and running in the OpenShift cluster. oc logs -f ${DB2_NAME}-0 Failure If no output is seen from the above command, or if it returns the message: Error from server (BadRequest): container \"db2\" in pod \"db2-0\" is waiting to start: ContainerCreating wait and rerun oc logs -f ${DB2_NAME}-0 until the output starts steaming as shown in the example output below. Example output (*) Previous setup has not been detected. Creating the users... (*) Creating users ... (*) Creating instance ... DB2 installation is being initialized. Total number of tasks to be performed: 4 Total estimated time for all tasks to be performed: 309 second(s) Task #1 start Description: Setting default global profile registry variables Task #1 end Task #2 start Description: Initializing instance list Estimated time 5 second(s) Task #2 end Task #3 start Description: Configuring DB2 instances Estimated time 300 second(s) Task #3 end Task #4 start Description: Updating global profile registry Estimated time 3 second(s) Task #4 end ... **Long output - truncated in this example** ... 2022-10-18-16.44.43.180954+000 I33681E386 LEVEL: Warning PID : 15858 TID : 139996146354048 PROC : db2start INSTANCE: db2inst1 NODE : 000 HOSTNAME: db2-0 FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078 MESSAGE : Released lock on the file: DATA #1 : String, 50 bytes /database/config/db2inst1/sqllib/ctrl/db2strst.lck Do not proceed until... Do not proceed to the next step until the following line appears in the output: /database/config/db2inst1/sqllib/ctrl/db2strst.lck Stop the oc logs command by entering Ctrl +c on the keyboard. Example output ... FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078 MESSAGE : Released lock on the file: DATA #1 : String, 50 bytes /database/config/db2inst1/sqllib/ctrl/db2strst.lck ^C itzuser@itz-2700039nft-srv4:~/b2bi$ Prepare the DB2 instance running in OpenShift. ./prepare_db2.sh Note, this script does not generate output. Remotely connect to the DB2 container running in OpenShift. oc rsh pod/${DB2_NAME}-0 su - db2inst1 Example output Last login: Tue Oct 18 20:47:33 UTC 2022 [db2inst1@db2-0 ~]$ Note, a remote connection is now open to the DB2 container running in OpenShift as shown by the change in the command prompt to: [db2inst1@db2-0 ~]$ Run the db2reg.sh script. ./db2reg.sh Example output DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. Create the B2Bi tables in DB2. db2 -stvf create_scc_db_b2bidb.sql Note, this command will take approximately 10 minutes to complete. Example output CREATE DATABASE B2BIDB AUTOMATIC STORAGE YES USING CODESET UTF-8 TERRITORY US COLLATE USING IDENTITY PAGESIZE 4096 DFT_EXTENT_SZ 32 DB20000I The CREATE DATABASE command completed successfully. CONNECT TO B2BIDB Database Connection Information Database server = DB2/LINUXX8664 11.5.5.1 SQL authorization ID = DB2INST1 Local database alias = B2BIDB UPDATE DATABASE CONFIG USING STMT_CONC LITERALS DB20000I The UPDATE DATABASE CONFIGURATION command completed successfully. ... Long output - truncated in this example ... CREATE USER TEMPORARY TABLESPACE UTEMP4KTS IN DATABASE PARTITION GROUP IBMDEFAULTGROUP PAGESIZE 4 K MANAGED BY AUTOMATIC STORAGE EXTENTSIZE 32 BUFFERPOOL UTEMP4KBP FILE SYSTEM CACHING DB20000I The SQL command completed successfully. CONNECT RESET DB20000I The SQL command completed successfully. Run the final DB2 update script. ./db2-update.sh Example output Database Connection Information Database server = DB2/LINUXX8664 11.5.5.1 SQL authorization ID = DB2INST1 Local database alias = B2BIDB DB20000I The SQL command completed successfully. DB20000I The TERMINATE command completed successfully. DB20000I The FORCE APPLICATION command completed successfully. DB21024I This command is asynchronous and may not be effective immediately. DB20000I The DEACTIVATE DATABASE command completed successfully. 10/18/2022 16:53:39 0 0 SQL1064N DB2STOP processing was successful. SQL1064N DB2STOP processing was successful. 10/18/2022 16:53:41 0 0 SQL1063N DB2START processing was successful. SQL1063N DB2START processing was successful. Exit the connection to the DB2 conatiner in Openshift. exit Example output logout itzuser@itz-2700039nft-srv4:~/b2bi$ Notice the command line prompt has changed back to the prompt for the VSI connection. Deploy MQ to OpenShift. ./deploy_mq.sh Example output Now using project \"mq\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\". You can add applications to this project with the 'new-app' command. For example, try: oc new-app rails-postgresql-example to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application: kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname serviceaccount/mq created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"mq\" service/mq-data created service/mq-web created W1018 16:54:39.757566 34060 shim_kubectl.go:58] Using non-groupfied API resources is deprecated and will be removed in a future release, update apiVersion to \"route.openshift.io/v1\" for your resource route.route.openshift.io/mq-web created secret/mq-secret created statefulset.apps/mq created Important Note, the next steps require editing of a file using the vi editor on the VSI. If you are not familiar with the vi editor, it is strongly recommend to watch the following video before proceeding. There is no audio for this video. Open the vi editor. vi env.sh Open the IBM Cloud **Entitlement key\" page here . Create a new key if one does not already exist by clicking the Get new key button. Click the Copy key button. Return to the terminal and paste the copied entitlement key between the quotes on the export APIKEY=\"\" line. Enter your e-mail address between the quotes on the export EMAIL=\"\" line. Verify the env.sh file looks like the example output below. cat env.sh Example output itzuser@itz-2700039nft-srv4:~/b2bi$ cat env.sh #!/usr/bin/bash ## Locate your APIKEY (Entitlement Key For Container Software) ## here: https://myibm.ibm.com/products-services/containerlibrary ## Requires IBM ID and permission. export PROJECT_NAME=\"b2bi\" export PROJECT_DIR=\"$HOME/b2bi\" export DB2_NAME=\"db2\" export MQ_NAME=\"mq\" export APIKEY=\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" export EMAIL=\"andrew@jones-tx.com\" itzuser@itz-2700039nft-srv4:~/b2bi$ Deploy the B2Bi containers on OpenShift. ./deploy_b2bi.sh Note, this command will take 30+ minutes to complete. Example output Now using project \"b2bi\" on server \"https://c103-e.us-south.containers.cloud.ibm.com:31501\". You can add applications to this project with the 'new-app' command. For example, try: oc new-app rails-postgresql-example to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application: kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname persistentvolumeclaim/ibm-cloud-file-nfs-storage-pvc created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:anyuid added: \"default\" deployment.apps/ibm-cloud-file-nfs-storage-pod created Defaulted container \"ibm-cloud-file-nfs-storage-pod\" out of: ibm-cloud-file-nfs-storage-pod, permissionsfix (init) ... Long output - truncated in this example ...","title":"Demonstration Environment Preparation"},{"location":"Part%201/02%20DemoPreparation/#accept-invitation-to-join-the-itz-ibm-cloud-account-for-the-custom-roks-reservation","text":"Open the You are invited to join an account in IBM Cloud email received from IBM Cloud and click the Join now link. In the browser window that opens, click the Join Account button. Follow the steps to login to IBM Cloud. On the IBM Cloud Dashboard set the current account to 2112072 - ITZ - V2 . Click the OpenShift icon in the left-hand menu bar. Click Clusters . Click the OpenShift cluster name in the table. Note: the cluster name will be different than seen in the above image. Click the OpenShift web console button. At this time, a page like the one below should be in a new browser window or tab. Leave this window open. It will be used again later.","title":"Accept invitation to join the ITZ IBM Cloud account for the Custom ROKS reservation"},{"location":"Part%201/02%20DemoPreparation/#download-the-ssh-key-from-the-ibm-cloud-vsi-classic-reservations","text":"Open a new browser window or tab to the ITZ My reservations page. Click on the IBM Cloud VSI (Classic) reservation tile. Click the Download SSH Key button. Take note Take note of the Public IP , SSH Port , and Username fields in the reservation. These values will be needed later. By default, most browsers will utilize the default Downloads directory in the users home directory.","title":"Download the SSH key from the IBM Cloud VSI (Classic) reservations"},{"location":"Part%201/02%20DemoPreparation/#connect-to-the-virtual-server-instance-vsi","text":"The next step must be performed on the users local computer. The directions below are specific to users with a Mac computer (MacOS). All instructions listed here should be the same for users running on Linux machines. For Windows machines users. Windows users will need to utilize a ssh client such as putty. XXXXXXX Open a terminal on local desktop computer using Mac Spotlight (press the command key and the space bar). Enter the following command to change to the Downloads directory where the ITZ private key was downloaded. cd Downloads Verify the SSH key file is found in the Downloads directory. ls -l pem-ibmcloudvsi-download.pem Example output -rw-r--r--@ 1 andrewjones staff 3243 Oct 18 13:12 pem-ibmcloudvsi-download.pem No such file or directory? If the file was not found, verify the default download directory of the browser used in step 11 above and try again adjusting for correct download directory. It is also possible the SSH key file name was not saved as pem-ibmcloudvsi-download.pem. Check the Downloads directory for the most recent file names. Change the permissions of the SSH key file. chmod 0600 pem-ibmcloudvsi-download.pem Verify the SSH key file has the proper permissions. ls -l pem-ibmcloudvsi-download.pem Example output -rw-------@ 1 andrewjones staff 3243 Oct 18 13:12 pem-ibmcloudvsi-download.pem Use ssh to connect to the remote VSI and enter yes when prompted to continue. Warning Substitute the strings PORT, USER, and PUBLICIP with the values in the VSI reservation as illustrated in the image in step 11 above. ssh -i pem-ibmcloudvsi-download.pem -p SSHPORT USERNAME@PUBLICIP Example output MacBook-Pro-2:Downloads andrewjones$ ssh -i pem-ibmcloudvsi-download.pem -p 2223 itzuser@169.59.6.211 The authenticity of host '[169.59.6.211]:2223 ([169.59.6.211]:2223)' can't be established. ED25519 key fingerprint is SHA256:YAN8U3PtpCzdhqc67F8ZQWlJjQgBV0DOi7LvZgDEtws. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added '[169.59.6.211]:2223' (ED25519) to the list of known hosts. Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-124-generic x86_64) ... **Long output - truncated in this example** ... To run a command as administrator (user \"root\"), use \"sudo \". See \"man sudo_root\" for details.","title":"Connect to the Virtual Server Instance (VSI)"},{"location":"Part%201/02%20DemoPreparation/#install-all-required-ibm-cloud-and-other-tools","text":"Use the following command to install all required tools. bash <(curl -sL https://ibm.biz/ocp-cli) Example output Updating the operating system. Wait! Installing Docker. Wait! Adding user to docker group. Wait! Setting up docker to start at reboot. Wait! Installing common utilities. Wait! Installing ibmcloud utility. Wait! Installing Helm. Wait! Installing OpenShift oc utility. Wait! Installing Kubernetes kubectl. Wait! cleaning up. Wait! All done. Client Version: 4.10.0 version.BuildInfo{Version:\"v3.10.1\", GitCommit:\"9f88ccb6aee40b9a0535fcc7efea6055e1ef72c9\", GitTreeState:\"clean\", GoVersion:\"go1.18.7\"} Flag --short has been deprecated, and will be removed in the future. The --short output will become the default. Client Version: v1.25.3 Kustomize Version: v4.5.7 ibmcloud version 2.11.1+c18277d-2022-09-23T21:49:24+00:00 Reboot your instance now: sudo shutdown -r now If the reboot message is not seen If the reboot message is not seen in the output of the previous command a problem occurred. Re-run the last command. When doing so, ignore error messages about items already installed. Restart the VSI. sudo shutdown -r now Example output Connection to PUBLICIP closed by remote host. Connection to PUBLICIP closed. Note, it will take a few minutes for the VSI to reboot. Wait 2 or 3 minutes and then continue the steps below.","title":"Install all required IBM Cloud and other tools"},{"location":"Part%201/02%20DemoPreparation/#download-the-b2bi-installation-scripts","text":"Use ssh to re-connect to the remote VSI. Warning Substitute the strings PORT, USER, and PUBLICIP with the values in the VSI reservation as illustrated in the image in step 11 above. ssh -i pem-ibmcloudvsi-download.pem -p SSHPORT USERNAME@PUBLICIP Example output MacBook-Pro-2:Downloads andrewjones$ ssh -i pem-ibmcloudvsi-download.pem -p 2223 itzuser@169.59.6.211 Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-124-generic x86_64) Documentation: https://help.ubuntu.com Management: https://landscape.canonical.com Support: https://ubuntu.com/advantage System information as of Tue Oct 18 19:58:23 UTC 2022 System load: 0.65 Users logged in: 0 Usage of /: 3.0% of 97.26GB IPv4 address for docker0: 172.17.0.1 Memory usage: 7% IPv4 address for eth0: 10.36.166.233 Swap usage: 0% IPv4 address for eth1: 169.59.6.211 Processes: 123 8 updates can be applied immediately. 8 of these updates are standard security updates. To see these additional updates run: apt list --upgradable New release '22.04.1 LTS' available. Run 'do-release-upgrade' to upgrade to it. Last login: Tue Oct 18 19:47:57 2022 from 70.114.143.247 Create a new directory B2Bi installation scripts. mkdir B2Bi Set the PROJECT_DIR environment variable. export PROJECT_DIR=$HOME/b2bi Change directories to PROJECT_DIR . cd $PROJECT_DIR Download the B2Bi installation script. wget -O rapid-lab-b2bi-newlab-61051.zip https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newlab-61051.zip?raw=true Example output --2022-10-18 20:12:56-- https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newdb-61051.zip?raw=true Resolving github.com (github.com)... 140.82.113.4 Connecting to github.com (github.com)|140.82.113.4|:443... connected. HTTP request sent, awaiting response... 302 Found Location: https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-61051.zip [following] --2022-10-18 20:12:56-- https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-61051.zip Reusing existing connection to github.com:443. HTTP request sent, awaiting response... 302 Found Location: https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-61051.zip [following] --2022-10-18 20:12:57-- https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-61051.zip Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 4061226 (3.9M) [application/zip] Saving to: \u2018rapid-lab-b2bi-newlab-61051.zip\u2019 rapid-lab-b2bi-newlab-61051.zip 100%[=========================================================================================================================================>] 3.87M --.-KB/s in 0.03s 2022-10-18 20:12:57 (147 MB/s) - \u2018rapid-lab-b2bi-newlab-61051.zip\u2019 saved [4061226/4061226] Unzip the installation script. unzip rapid-lab-b2bi-newlab-61051.zip Example output Archive: rapid-lab-b2bi-newlab-61051.zip inflating: deploy_mq.sh inflating: edited-values.yaml inflating: prepare_db2.sh inflating: deploy_db2.sh inflating: README.md inflating: COPYING inflating: env.sh inflating: deploy_b2bi.sh inflating: db2jcc4.jar","title":"Download the B2Bi installation scripts"},{"location":"Part%201/02%20DemoPreparation/#authenticate-to-the-openshift-cluster","text":"For the next steps, the OpenShift login command to authenticate to the cluster in the ITZ reservation must be retrieved an executed. Switch to the OpenShift web console browser window or tab. Click the IAM identity drop-down menu at top left of the OpenShift web console and click the Copy Login Command option. Click the Display token link. Copy and paste the string in the Log in with this token field. Switch to the SSH terminal window from earlier. Paste the oc login command line copied in step 29 into the terminal window and press enter. Example output itzuser@itz-2700039nft-srv4:~/b2bi$ oc login --token=sha256~XXXXXXXXXXXXXXXXXX --server=https://c103-e.us-south.containers.cloud.ibm.com:31501 Logged into \"https://c103-e.us-south.containers.cloud.ibm.com:31501\" as \"IAM#andrew@jones-tx.com\" using the token provided. You have access to 66 projects, the list has been suppressed. You can list all projects with 'oc projects' Using project \"default\". Welcome! See 'oc help' to get started. itzuser@itz-2700039nft-srv4:~/b2bi$ Run the environment setup and DB2 deploy scripts. . env.sh ; ./deploy_db2.sh Example output Now using project \"db2\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\". You can add applications to this project with the 'new-app' command. For example, try: oc new-app rails-postgresql-example to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application: kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname serviceaccount/db2 created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"db2\" secret/db2-secret created service/db2-ci created service/db2-lb created statefulset.apps/db2 created Note, wait approximately 1 minutes for the DB2 containers to start loading in OpenShift before executing the next step. Verify DB2 is up and running in the OpenShift cluster. oc logs -f ${DB2_NAME}-0 Failure If no output is seen from the above command, or if it returns the message: Error from server (BadRequest): container \"db2\" in pod \"db2-0\" is waiting to start: ContainerCreating wait and rerun oc logs -f ${DB2_NAME}-0 until the output starts steaming as shown in the example output below. Example output (*) Previous setup has not been detected. Creating the users... (*) Creating users ... (*) Creating instance ... DB2 installation is being initialized. Total number of tasks to be performed: 4 Total estimated time for all tasks to be performed: 309 second(s) Task #1 start Description: Setting default global profile registry variables Task #1 end Task #2 start Description: Initializing instance list Estimated time 5 second(s) Task #2 end Task #3 start Description: Configuring DB2 instances Estimated time 300 second(s) Task #3 end Task #4 start Description: Updating global profile registry Estimated time 3 second(s) Task #4 end ... **Long output - truncated in this example** ... 2022-10-18-16.44.43.180954+000 I33681E386 LEVEL: Warning PID : 15858 TID : 139996146354048 PROC : db2start INSTANCE: db2inst1 NODE : 000 HOSTNAME: db2-0 FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078 MESSAGE : Released lock on the file: DATA #1 : String, 50 bytes /database/config/db2inst1/sqllib/ctrl/db2strst.lck Do not proceed until... Do not proceed to the next step until the following line appears in the output: /database/config/db2inst1/sqllib/ctrl/db2strst.lck Stop the oc logs command by entering Ctrl +c on the keyboard. Example output ... FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078 MESSAGE : Released lock on the file: DATA #1 : String, 50 bytes /database/config/db2inst1/sqllib/ctrl/db2strst.lck ^C itzuser@itz-2700039nft-srv4:~/b2bi$ Prepare the DB2 instance running in OpenShift. ./prepare_db2.sh Note, this script does not generate output. Remotely connect to the DB2 container running in OpenShift. oc rsh pod/${DB2_NAME}-0 su - db2inst1 Example output Last login: Tue Oct 18 20:47:33 UTC 2022 [db2inst1@db2-0 ~]$ Note, a remote connection is now open to the DB2 container running in OpenShift as shown by the change in the command prompt to: [db2inst1@db2-0 ~]$ Run the db2reg.sh script. ./db2reg.sh Example output DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. DB20000I The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully. Create the B2Bi tables in DB2. db2 -stvf create_scc_db_b2bidb.sql Note, this command will take approximately 10 minutes to complete. Example output CREATE DATABASE B2BIDB AUTOMATIC STORAGE YES USING CODESET UTF-8 TERRITORY US COLLATE USING IDENTITY PAGESIZE 4096 DFT_EXTENT_SZ 32 DB20000I The CREATE DATABASE command completed successfully. CONNECT TO B2BIDB Database Connection Information Database server = DB2/LINUXX8664 11.5.5.1 SQL authorization ID = DB2INST1 Local database alias = B2BIDB UPDATE DATABASE CONFIG USING STMT_CONC LITERALS DB20000I The UPDATE DATABASE CONFIGURATION command completed successfully. ... Long output - truncated in this example ... CREATE USER TEMPORARY TABLESPACE UTEMP4KTS IN DATABASE PARTITION GROUP IBMDEFAULTGROUP PAGESIZE 4 K MANAGED BY AUTOMATIC STORAGE EXTENTSIZE 32 BUFFERPOOL UTEMP4KBP FILE SYSTEM CACHING DB20000I The SQL command completed successfully. CONNECT RESET DB20000I The SQL command completed successfully. Run the final DB2 update script. ./db2-update.sh Example output Database Connection Information Database server = DB2/LINUXX8664 11.5.5.1 SQL authorization ID = DB2INST1 Local database alias = B2BIDB DB20000I The SQL command completed successfully. DB20000I The TERMINATE command completed successfully. DB20000I The FORCE APPLICATION command completed successfully. DB21024I This command is asynchronous and may not be effective immediately. DB20000I The DEACTIVATE DATABASE command completed successfully. 10/18/2022 16:53:39 0 0 SQL1064N DB2STOP processing was successful. SQL1064N DB2STOP processing was successful. 10/18/2022 16:53:41 0 0 SQL1063N DB2START processing was successful. SQL1063N DB2START processing was successful. Exit the connection to the DB2 conatiner in Openshift. exit Example output logout itzuser@itz-2700039nft-srv4:~/b2bi$ Notice the command line prompt has changed back to the prompt for the VSI connection. Deploy MQ to OpenShift. ./deploy_mq.sh Example output Now using project \"mq\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\". You can add applications to this project with the 'new-app' command. For example, try: oc new-app rails-postgresql-example to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application: kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname serviceaccount/mq created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"mq\" service/mq-data created service/mq-web created W1018 16:54:39.757566 34060 shim_kubectl.go:58] Using non-groupfied API resources is deprecated and will be removed in a future release, update apiVersion to \"route.openshift.io/v1\" for your resource route.route.openshift.io/mq-web created secret/mq-secret created statefulset.apps/mq created Important Note, the next steps require editing of a file using the vi editor on the VSI. If you are not familiar with the vi editor, it is strongly recommend to watch the following video before proceeding. There is no audio for this video. Open the vi editor. vi env.sh Open the IBM Cloud **Entitlement key\" page here . Create a new key if one does not already exist by clicking the Get new key button. Click the Copy key button. Return to the terminal and paste the copied entitlement key between the quotes on the export APIKEY=\"\" line. Enter your e-mail address between the quotes on the export EMAIL=\"\" line. Verify the env.sh file looks like the example output below. cat env.sh Example output itzuser@itz-2700039nft-srv4:~/b2bi$ cat env.sh #!/usr/bin/bash ## Locate your APIKEY (Entitlement Key For Container Software) ## here: https://myibm.ibm.com/products-services/containerlibrary ## Requires IBM ID and permission. export PROJECT_NAME=\"b2bi\" export PROJECT_DIR=\"$HOME/b2bi\" export DB2_NAME=\"db2\" export MQ_NAME=\"mq\" export APIKEY=\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" export EMAIL=\"andrew@jones-tx.com\" itzuser@itz-2700039nft-srv4:~/b2bi$ Deploy the B2Bi containers on OpenShift. ./deploy_b2bi.sh Note, this command will take 30+ minutes to complete. Example output Now using project \"b2bi\" on server \"https://c103-e.us-south.containers.cloud.ibm.com:31501\". You can add applications to this project with the 'new-app' command. For example, try: oc new-app rails-postgresql-example to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application: kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname persistentvolumeclaim/ibm-cloud-file-nfs-storage-pvc created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:anyuid added: \"default\" deployment.apps/ibm-cloud-file-nfs-storage-pod created Defaulted container \"ibm-cloud-file-nfs-storage-pod\" out of: ibm-cloud-file-nfs-storage-pod, permissionsfix (init) ... Long output - truncated in this example ...","title":"Authenticate to the OpenShift cluster"},{"location":"Part%202/01%20UseCase1/","text":"This use case involves setting up an Applicability Statement 2 (AS2) connection as well as setting up selected Electronic Data Interchange (EDI) documents to certify. PEM Partner Repository enables Sponsor Administrators to configure communication adapters to receive and make connections to trading partners for the purpose of transferring files. XXXXXXX - the above sentence doesn't sound right, need to redo Learn more about managing configurations for partners using the PEM Partner Repository here . Learn more about AS2 in general here and how to configure AS2 in PEM here .","title":"Use Case Introduction"},{"location":"Part%202/02%20UseCase1Steps/","text":"Access PEM and rollout an activity The first steps in the Self-Service EDI Onboarding use case will be to access the PEM portal, roll out an activity that includes selecting a partner that has been added to PEM, and view the activity in the monitoring screen. Start the activity Validate partner details Start connectivity setup Select the certificates Review AS2 details Complete self certification","title":"Demonstration Steps"},{"location":"Part%202/02%20UseCase1Steps/#access-pem-and-rollout-an-activity","text":"The first steps in the Self-Service EDI Onboarding use case will be to access the PEM portal, roll out an activity that includes selecting a partner that has been added to PEM, and view the activity in the monitoring screen.","title":"Access PEM and rollout an activity"},{"location":"Part%202/02%20UseCase1Steps/#start-the-activity","text":"","title":"Start the activity"},{"location":"Part%202/02%20UseCase1Steps/#validate-partner-details","text":"","title":"Validate partner details"},{"location":"Part%202/02%20UseCase1Steps/#start-connectivity-setup","text":"","title":"Start connectivity setup"},{"location":"Part%202/02%20UseCase1Steps/#select-the-certificates","text":"","title":"Select the certificates"},{"location":"Part%202/02%20UseCase1Steps/#review-as2-details","text":"","title":"Review AS2 details"},{"location":"Part%202/02%20UseCase1Steps/#complete-self-certification","text":"","title":"Complete self certification"},{"location":"Part%203/01%20UseCase2/","text":"XXXXXXX - below needs to be proofed still The second use case will focus on setting up the certificate expiry parameters for partners and then moving a partner through the process to update their expiring certificate for which they have been alerted. Once the parameters are set up, this allows PEM to start monitoring all of the sponsor\u2019s partners for their expiring certificates so that a partner can update their certificate via a self-service process. This allows the sponsor to rely on PEM to alert the partners of expiring certificates, removing the manual monitoring required to assure that certificates are always up to date. PEM still provides a view for the sponsors into the partner\u2019s progress in case they need to intervene.","title":"Use Case Introduction"},{"location":"Part%203/02%20UseCase2Steps/","text":"Setup partner certificate expiry processes Activate the partner expiry activity in PEMStandard","title":"Demonstration Steps"},{"location":"Part%203/02%20UseCase2Steps/#setup-partner-certificate-expiry-processes","text":"","title":"Setup partner certificate expiry processes"},{"location":"Part%203/02%20UseCase2Steps/#activate-the-partner-expiry-activity-in-pemstandard","text":"","title":"Activate the partner expiry activity in PEMStandard"},{"location":"Part%204/01%20UseCase3/","text":"XXXXXXX - below needs to be proofed still This use case involves setting up a SFTP connection for a partner. By the end of the activity, you will have a partner that has completed and validated their connectivity setup and will be ready to start trading with the sponsor. While PEM Standard supports AS2, Connect:Direct, FTP, FTPS, and SFTP protocols, for purposes of demonstrations, we will focus on the SFTP onboarding protocol along with AS2 as these are the two most dominant protocols most requested by our customers. This onboarding flow with demonstrate the combined efforts of the trading partners, business users, and IT teams to collaborate and automate the onboarding of trading partners to the MFT platform. In addition to configuring the protocols, the flows will provide options to either push/pull files to and from partners' servers or provide the capability for partners to push/pull files to and from the sponsor.","title":"Use Case Introduction"},{"location":"Part%204/02%20UseCase3Steps/","text":"Access PEM and rollout activity Start the activity Validate the partner details Select protocol and connectivity directions Create the service configurations Complete the user account Setup Build the data workflow Test connectivity","title":"Demonstration Steps"},{"location":"Part%204/02%20UseCase3Steps/#access-pem-and-rollout-activity","text":"","title":"Access PEM and rollout activity"},{"location":"Part%204/02%20UseCase3Steps/#start-the-activity","text":"","title":"Start the activity"},{"location":"Part%204/02%20UseCase3Steps/#validate-the-partner-details","text":"","title":"Validate the partner details"},{"location":"Part%204/02%20UseCase3Steps/#select-protocol-and-connectivity-directions","text":"","title":"Select protocol and connectivity directions"},{"location":"Part%204/02%20UseCase3Steps/#create-the-service-configurations","text":"","title":"Create the service configurations"},{"location":"Part%204/02%20UseCase3Steps/#complete-the-user-account-setup","text":"","title":"Complete the user account Setup"},{"location":"Part%204/02%20UseCase3Steps/#build-the-data-workflow","text":"","title":"Build the data workflow"},{"location":"Part%204/02%20UseCase3Steps/#test-connectivity","text":"","title":"Test connectivity"},{"location":"Part%205/01%20UseCase4/","text":"XXXXXXX - below needs to be proofed still This use case will focus on assuring that the customer\u2019s partner base remains current. With PEM Standard, the sponsor can set up an interval where they will want to start a process to validate the contact information with their partners. Like certificate updates, the partners will receive a notification without any interaction to kick off the process from the sponsor. Like the certificate updates, the sponsor will be able to monitor the progress of their partners in updating their contact details through a self-service process that has been automated by PEM. This view allows the sponsors to track the partner\u2019s progress in case they need to intervene.","title":"Use Case Introduction"},{"location":"Part%205/02%20UseCase4Steps/","text":"Access PEM and rollout an activity Start the activity Select partner Update partner information","title":"Demonstration Steps"},{"location":"Part%205/02%20UseCase4Steps/#access-pem-and-rollout-an-activity","text":"","title":"Access PEM and rollout an activity"},{"location":"Part%205/02%20UseCase4Steps/#start-the-activity","text":"","title":"Start the activity"},{"location":"Part%205/02%20UseCase4Steps/#select-partner","text":"","title":"Select partner"},{"location":"Part%205/02%20UseCase4Steps/#update-partner-information","text":"","title":"Update partner information"},{"location":"Part%206/01%20UseCase5/","text":"XXXXXXX - below needs to be proofed still This use case will provide an option for the sponsor to notify their partners of any type of news that needs to be broadcast to their entire partner base, or to selected partners based on their profiles. The general notification will provide an easy way to not only inform partners, but also can be used to track the partners progress and in cases where required, their acceptance of the changes coming from the sponsor.","title":"Use Case Introduction"},{"location":"Part%206/02%20UseCase5Steps/","text":"Access PEM and rollout an activity Start the activity Select the partner group to be notified Build and verify the notification","title":"Demonstration Steps"},{"location":"Part%206/02%20UseCase5Steps/#access-pem-and-rollout-an-activity","text":"","title":"Access PEM and rollout an activity"},{"location":"Part%206/02%20UseCase5Steps/#start-the-activity","text":"","title":"Start the activity"},{"location":"Part%206/02%20UseCase5Steps/#select-the-partner-group-to-be-notified","text":"","title":"Select the partner group to be notified"},{"location":"Part%206/02%20UseCase5Steps/#build-and-verify-the-notification","text":"","title":"Build and verify the notification"},{"location":"Part%207/01%20UseCase6/","text":"Env file Update env.sh file with your certified container's entitlement key and email address. The link to acquire the entitlement key is available in the env.sh file. Provision DB2, MQ and B2Bi From this point forward, you must copy the commands from this README file and paste them into the terminal as directed. DB2 . env.sh ; ./deploy_db2.sh oc logs -f ${DB2_NAME}-0 Wait until you see the following line in the log. Press Ctrl+c to break out of the log. /database/config/db2inst1/sqllib/ctrl/db2strst.lck ./prepare_db2.sh oc rsh pod/${DB2_NAME}-0 su - db2inst1 ./db2reg.sh db2 -stvf create_scc_db_b2bidb.sql ./db2-update.sh exit MQ ./deploy_mq.sh B2Bi script ./deploy_b2bi.sh Check B2Bi's status The ASI, AC, and API pods take 20 minutes to boot up. Before using auto-scalers, double-check that they are Ready 1/1. oc get pods Auto scalers envsubst < autoscalers.yaml | oc create -f - Log in to B2Bi Retrieve B2Bi dashboard's URL. Log in with admin/password. oc get route sterling-fg-b2bi-asi-internal-route -o jsonpath='{.spec.host} {\"\\n\"}' Completion You have now completed this lab successfully. Helm upgrade (when needed) . env.sh envsubst < ./ibm-b2bi-prod/values.yaml | helm upgrade b2bi ./ibm-b2bi-prod --namespace ${PROJECT_NAME} --values - Uninstall/Delete envsubst < autoscalers.yaml | oc delete -f - If needed, you may repeat this lab by uninstalling everything in reverse order. delete_b2bi.sh delete_mq.sh delete_db2.sh","title":"Use Case Introduction"},{"location":"Part%207/01%20UseCase6/#env-file","text":"Update env.sh file with your certified container's entitlement key and email address. The link to acquire the entitlement key is available in the env.sh file.","title":"Env file"},{"location":"Part%207/01%20UseCase6/#provision-db2-mq-and-b2bi","text":"From this point forward, you must copy the commands from this README file and paste them into the terminal as directed.","title":"Provision DB2, MQ and B2Bi"},{"location":"Part%207/01%20UseCase6/#db2","text":". env.sh ; ./deploy_db2.sh oc logs -f ${DB2_NAME}-0 Wait until you see the following line in the log. Press Ctrl+c to break out of the log. /database/config/db2inst1/sqllib/ctrl/db2strst.lck ./prepare_db2.sh oc rsh pod/${DB2_NAME}-0 su - db2inst1 ./db2reg.sh db2 -stvf create_scc_db_b2bidb.sql ./db2-update.sh exit","title":"DB2"},{"location":"Part%207/01%20UseCase6/#mq","text":"./deploy_mq.sh","title":"MQ"},{"location":"Part%207/01%20UseCase6/#b2bi-script","text":"./deploy_b2bi.sh","title":"B2Bi script"},{"location":"Part%207/01%20UseCase6/#check-b2bis-status","text":"The ASI, AC, and API pods take 20 minutes to boot up. Before using auto-scalers, double-check that they are Ready 1/1. oc get pods","title":"Check B2Bi's status"},{"location":"Part%207/01%20UseCase6/#auto-scalers","text":"envsubst < autoscalers.yaml | oc create -f -","title":"Auto scalers"},{"location":"Part%207/01%20UseCase6/#log-in-to-b2bi","text":"Retrieve B2Bi dashboard's URL. Log in with admin/password. oc get route sterling-fg-b2bi-asi-internal-route -o jsonpath='{.spec.host} {\"\\n\"}'","title":"Log in to B2Bi"},{"location":"Part%207/01%20UseCase6/#completion","text":"You have now completed this lab successfully.","title":"Completion"},{"location":"Part%207/01%20UseCase6/#helm-upgrade-when-needed","text":". env.sh envsubst < ./ibm-b2bi-prod/values.yaml | helm upgrade b2bi ./ibm-b2bi-prod --namespace ${PROJECT_NAME} --values -","title":"Helm upgrade (when needed)"},{"location":"Part%207/01%20UseCase6/#uninstalldelete","text":"envsubst < autoscalers.yaml | oc delete -f - If needed, you may repeat this lab by uninstalling everything in reverse order. delete_b2bi.sh delete_mq.sh delete_db2.sh","title":"Uninstall/Delete"},{"location":"Part%207/02%20UseCase6Steps/","text":"XXXXXXX - the following were cut and pasted in, needs to be reworked based upon the Data Compliance use case Access PEM and rollout an activity Start the activity Select the partner group to be notified Build and verify the notification","title":"Demonstration Steps"},{"location":"Part%207/02%20UseCase6Steps/#access-pem-and-rollout-an-activity","text":"","title":"Access PEM and rollout an activity"},{"location":"Part%207/02%20UseCase6Steps/#start-the-activity","text":"","title":"Start the activity"},{"location":"Part%207/02%20UseCase6Steps/#select-the-partner-group-to-be-notified","text":"","title":"Select the partner group to be notified"},{"location":"Part%207/02%20UseCase6Steps/#build-and-verify-the-notification","text":"","title":"Build and verify the notification"}]}