{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Welcome to the IBM Sterling Data Exchange Level 3 demonstration guide! The goal of this demonstration guide is to provide IBM and Business Partner technical sellers with the knowledge and tools to perform hands-on demonstrations of IBM Sterling B2B Integrator.</p> <p>READ THIS BEFORE PROCEEDING</p> <p>To complete this activity, users MUST have an entitlement key in the IBM Entitled Registry to access IBM container software (e.g. IBM Sterling B2B Integrator). Before proceeding, verify an entitlement exists.</p> <p>To verify entitlement to IBM container software, open the IBM Entitlement key page here. Note, authentication to ibm.com will be required. If a screen with a yellow warning as seen in the image below is displayed, you will NOT be able to complete this activity. IBM employees will need to open a IBM Cloud support ticket to request access. Business Partners can learn more about their entitlements here, and will need to speak with their IBM representative to resolve the entitlement issue.</p> <p></p> <p>If a valid entitlement exists, a screen similar to the one below should be displayed. The actual key will be created in a later step. lease proceed with the demonstration script.</p> <p></p> <p>In addition to completing all the steps in this demonstration guide, to obtain the associated IBM Sterling Data Exchange Level 3 badge:</p> <p>IBM Technical Sellers must develop and record a Stand &amp; Deliver presentation. This video is intended to simulate delivery of a \u201clive\u201d demo in front of a client \u2014 on camera. IBMers will have flexibility in defining a hypothetical client, the pain points the client has, and the goals they aspire to achieve. The recording will then cover the seller\u2019s hands-on demonstration and pitch to the client the value of the IBM solution using the environment and techniques of this lab. Specific criteria that must be demonstrated as part of the Stand &amp; Deliver recordings is provided within the documentation that accompanies the Level 3 course in Your Learning.</p> <p>Business Partners must pass an accreditation quiz after completing this demonstration guide. The quiz consists of multiple choice questions, with four possible responses (and only one correct answer) for each question. The quiz verifies use of the demonstration environment and not general knowledge of the offering.Hint: keep the demonstration guide and the associated IBM Technology Zone (TechZone) environment active while completing the quiz. Watch for the \"BP quiz question\"  icon in the demonstration guide.</p> <p>Before jumping to the Demonstration Overview, please read the guidance below. Reading and understanding the information will save time while completing the steps in this guide.</p>"},{"location":"#recommended-browsers","title":"Recommended browsers","text":"<p>It is recommended to use either Firefox or Safari web browsers. There has been at least one instance reported using the Chrome browser and some popup menus not being populated and some popup dialogs not appearing. No testing has been done using the Microsoft Edge browser.</p>"},{"location":"#helpful-tips-for-using-this-demonstration-guide-and-environment","title":"Helpful tips for using this demonstration guide and environment","text":"<p>Throughout the guide, images are used to help guide students through the demonstration.</p> <p>The following styles of highlighting are utilized in images:</p> <ul> <li>Action highlight box: Illustrates where to click, enter, or select an item:</li> </ul> <p></p> <ul> <li> <p>Path/explore highlight box: Illustrates one of two things:</p> <ul> <li>the path to follow to get to a specific location in the user interface</li> <li>areas to explore</li> </ul> </li> </ul> <p></p> <ul> <li>Copy to clipboard box: The text is copied to the clipboard. Click the copy icon (highlighted below) and then paste using the operating system's paste function. For example, entering Ctrl+v, Cmd+v, or right-click and select paste.</li> </ul> <p></p>"},{"location":"#acronyms","title":"Acronyms","text":"<p>The following acronyms are used throughout this demonstration guide:</p> <pre><code>- Applicability Statement 2 (AS2)\n- Application programming interfaces (APIs)\n- Artificial Intelligence (AI)\n- Business Partner (BP)\n- Electronic Data Interchange (EDI)\n- IBM Sterling Business to Business Integrator (B2Bi)\n- IBM Sterling Partner Engagement Manager (PEM)\n- IBM Technology Zone (ITZ)\n- User Interface (UI)\n- Virtual Machine (VM)\n- Yet Another Markup Language (YAML)\n</code></pre> <p>It is now time to proceed to the Demonstration Overview.</p>"},{"location":"ClientDemonstration/","title":"Client Demonstration","text":"<p>It is now time for the partners to transfer files between each other using the newly created B2Bi SFTP adapter, but first one last setup step to make the demonstration more visually exciting.</p> <p>In this demonstration, the FileZilla application will be used. FileZilla is a free and open-source, cross-platform FTP application, consisting of FileZilla Client and FileZilla Server. Clients are available for Windows, Linux, and macOS. Learn more about FileZilla here.</p> <p>If users do not already have FileZilla installed, do so now. IBM employees can download FileZilla from the Mac@IBM store. For Business Partners and IBMers on Microsoft Windows, the download links are available at the link above.</p> <p>If users are unable to use FileZilla, it is recommended to use the IBM Sterling File Gateway clients for both users in the scenario that follows. To avoid having to log in and out between user actions, it is recommended to use two different browsers (e.g. Chrome and Firefox) for each user or private/incognito windows for each user when accessing the IBM Sterling File Gateways.</p> <p>When doing a client demonstration, it is recommended to split the FileZilla and browser windows on the same screen to avoid switching back and forth during the demonstration.</p> <p>For this scenario, partner1 will use the IBM Sterling File Gateway clients, and partner2 will use FileZilla.</p> <p>As an introduction, watch this brief video of the steps to be performed.</p> <p></p>"},{"location":"ClientDemonstration/#configure-filezilla-for-partner2","title":"Configure FileZilla for partner2","text":"<p>To configure FileZilla for partner2 both the File Gateway route address and port number will be needed.</p> <ol> <li>Return to the OpenShift web console and click on the sterling-fg-b2bi-asi-internal-route route on the Routes page.</li> </ol> <p></p> <ol> <li>Select the Host field, right click, and click Copy.</li> </ol> <p>Note, the example below was captured using Firefox on MacOS. Others browser menus options may be labeled differently.</p> <p></p> <ol> <li>Open the FileZilla application on local computer.</li> </ol> <p></p> <ol> <li>Click the FileZilla Site Manager  icon.</li> </ol> <p></p> <ol> <li>Click the New site button.</li> </ol> <p></p> <ol> <li>Enter B2BGateway for the New Site name and press enter.</li> </ol> <p></p> <ol> <li>Select SFTP - Secure File Transfer Protocol on the Protocol pull-down menu.</li> </ol> <p></p> <ol> <li>Paste the route copied in step 2 into the Host field.</li> </ol> <p></p> <ol> <li>Enter the port number of the sterling-fg-b2bi-asi-backend-svc service in the Port field.</li> </ol> <p></p> Don't remember the port number? <p>The port number can be found in the details of the sterling-fg-b2bi-asi-backend-svc service in the OpenShift web console - use adapters-1's Node port.</p> <p></p> <ol> <li>Enter partner2 in the User field and password in the Password field and click the Connect button.</li> </ol> <p></p> <ol> <li>Check the Always trust this host, add this key to cache checkbox and click OK on the Unknown host key pop-up window.</li> </ol> <p></p> <ol> <li>Notice the connection is established and the Remote site shows no files.</li> </ol> <p></p> <ol> <li>At this time, it is recommended to have both FileZilla and the OpenShift web console both visible at the same time (either split on a single screen or using multiple monitors).</li> </ol> <p></p> <ol> <li>Create or download the 2 sample files that will be transferred between partner1 and partner2. Since the templates created earlier allow for any file names to be transferred it does not matter what files are used.  It is suggested to use small files so the transfers happen quickly.  Feel free to download these two sample invoice files. In most browsers, select the link names below, right click on the links, and click Save link as to the local Downloads directory.</li> </ol> <ul> <li> <p>SampleInvoice1.xml</p> </li> <li> <p>SampleInvoice2.xml</p> </li> </ul>"},{"location":"ClientDemonstration/#transfer-a-file-from-partner1-to-partner2-using-the-ibm-sterling-my-file-gateway-20","title":"Transfer a file from partner1 to partner2 using the IBM Sterling My File Gateway 2.0","text":"<ol> <li>In the OpenShift web console click the link to open the link to the sterling-fg-b2bi-asi-internal-route-myfg route.</li> </ol> <ol> <li>Enter partner1 in the User name field, password in the Password field, and then click Log in.</li> </ol> <ol> <li>Click the hamburger menu icon  at top left and click Uploads.</li> </ol> <ol> <li>Click the / directory in left-hand panel.</li> </ol> <ol> <li>Click the select link in the Upload to / panel.</li> </ol> <ol> <li>Click the SampleInvoice1.xml file in the Downloads directory and click Open.</li> </ol> <p>Note</p> <p>Navigate to the directory where the sample invoice files were downloaded or pick another file to transfer. Do not transfer any file with confidential or personal information. The image above was captured using Firefox on MacOS, other browsers and operating system combinations may look different.</p> <p></p> <ol> <li>Verify in the myFileGateway application that the file transferred successfully.</li> </ol> <p></p> <ol> <li>Verify in FileZilla that partner2 received the file.</li> </ol> <p></p> <p>If the file doesn't appear, click the View menu in the FileZilla menubar and then click Refresh. Note, you may need to click Refresh multiple times.</p> <p>Note</p> <p>The file size shown in IBM Sterling My File Gateway 2.0 is in kilobytes (KB) and in FileZilla the file size is displayed in bytes, but they are the same and the file transfer was successful.</p> <p>It is important to realize the file has been transferred to the B2Bi Gateway repository. In a production environment, partner2 would need to download the file. FileZilla is showing the contents of the data store on the gateway that partner2 has permissions to see.</p>"},{"location":"ClientDemonstration/#view-the-details-of-the-file-transfer-in-ibm-sterling-my-file-gateway-20","title":"View the details of the file transfer in IBM Sterling My File Gateway 2.0","text":"<ol> <li>Click File activity under the hamburger menu icon .</li> </ol> <ol> <li>Click the link for the recently uploaded file: SampleInvoice1.xml.</li> </ol> <ol> <li>Review the events that occurred during the file transfer.</li> </ol> <p>Notice events FG_0503 and FG_0504 show the Passthrough channel template was used to properly route the transferred file to partner2.</p> BP quiz question <p>There is a quiz question related to the events of a successful file transfer. A screen capture of all the events and event numbers will help answer the question.</p> <p>For additional demonstrations, consider the following:</p> <ul> <li>Transfer a file from partner2 to partner1.</li> <li>Verify the file transfers using the IBM Sterling File Gateway application.</li> <li>Transfer a file using the older version of IBM Sterling My File Gateway using the sterling-fg-b2bi-asi-internal-route-myfilegateway route found in the OpenShift web console.</li> </ul>"},{"location":"ConfigurationPart1/","title":"B2Bi Configuration Part 1","text":"<p>In this chapter, learn how to configure a Secure File Transfer Protocol (SFTP) adapter using the containerized B2Bi deployment.</p>"},{"location":"ConfigurationPart1/#open-the-b2bi-dashboard-and-change-password-policies","title":"Open the B2Bi dashboard and change password policies","text":"<ol> <li>In the OpenShift web console, click Routes under the Networking section in left-hand panel.</li> </ol> <ol> <li>Click the All Projects pull-down menu and click the b2bi project.</li> </ol> BP quiz question <p>Several BP quiz questions will come from the OpenShift web console. When taking the BP quiz make sure the ITZ environment is still active and keep this demonstration script open.</p> <ol> <li>Notice all the routes that are currently defined in the b2bi Project, there are 15 of them</li> </ol> <p></p> <ol> <li>To start the setup of the SFTP adapter, launch the IBM Sterling B2Bi dashboard by clicking on the route for the sterling-fg-b2bi-asi-internal-route-dashboard route in the Location column. Do not click the Route name, rather click the Route link in the Location column of the table.</li> </ol> <p></p> <ol> <li>If a security risk is received in the browser, accept it. In a production environment certificates would be configured for these web pages.</li> </ol> <p> </p> <p>Note: the images above are from Firefox running on MacOS. They will look different depending on browser and operating system.</p> <p>Hint</p> <p>As this is a new install, in this demonstration the default user ids and passwords will be used. To keep things simple in this demonstration, all passwords will be set to password. Not secure, but this will be a short lived demonstration environment.</p> <ol> <li>Enter admin in the User ID field and password in the Password field, and then click Sign In.</li> </ol> <p></p> <p>In the latest IBM Sterling B2B Integrator release, new password policies have been set that require users to change their password the first time they authenticate. </p> <ol> <li>Enter password in the Old Password field, and then enter passw0rd! in both the New Password and Retype Password fields and click Sign In. </li> </ol> <p></p> <p>For this demonstration environment, change the password policies to simplify the demonstration flow. </p> <ol> <li>Click Accounts in left-hand menu and then click Password Policy.</li> </ol> <p></p> <ol> <li>Enter default in the Password Policy Name text entry field and click the Go! button in the Search section.</li> </ol> <p></p> <ol> <li>Click the edit icon for the Default User Policy.</li> </ol> <p></p> <ol> <li>Uncheck the Password required to contain special characters and Required password change on next login attempt check boxes and then click Save.</li> </ol> <p></p> <ol> <li>Click Finish on the confirmation screen.</li> </ol> <p></p> <p>Important</p> <p>In most cases, clients will typically strengthen the default password policy to match their corporate standards for passwords. Again, they are being reduced here to simplify the demonstration flow.</p> <ol> <li>Click Return on the completion screen.</li> </ol> <p></p>"},{"location":"ConfigurationPart1/#create-a-ssh-host-identity-key","title":"Create a SSH Host Identity key","text":"<p>First, a SSH Host Identity needs to be created. The Host Identity Key is a Private/Public key pair used to identify the Application SFTP Server to remote clients.  Note, for this demonstration, default values will be used where possible, but production deployments may use other values depending on client requirements.</p> BP quiz question <p>Several BP quiz questions will come from the B2Bi dashboard. When taking the BP quiz make sure the ITZ environment is still active and keep this demonstration script open.</p> <ol> <li>Click the Deployment menu item in left-hand menu bar and then click the SSH Host Identity Key option.</li> </ol> <p></p> <ol> <li>Click the Go! button in the Create: New Host Identity Key box.</li> </ol> <p></p> <ol> <li>Enter demo in the Host Name: field of the \"New Host Identity Key\" form and then click the Next button.</li> </ol> <p></p> <ol> <li>Click Finish.</li> </ol> <p></p> <ol> <li>Click Close on the pop-up dialog.</li> </ol> <p></p> <ol> <li>Wait until the completed message is received and the click the Return button.</li> </ol> <p></p>"},{"location":"ConfigurationPart1/#create-an-sftp-adapter","title":"Create an SFTP adapter","text":"<p>Next, an SFTP adapter must be created which will utilize the OpenShift service port for B2Bi.</p> <ol> <li>Click the Services menu item under Deployment in the left-hand menu bar.</li> </ol> <p></p> <ol> <li>Click the Configuration menu item under Services.</li> </ol> <p></p> <ol> <li>Enter sftp in the Service Name field and click the Go! button in the Search box.</li> </ol> <p></p> <ol> <li>Locate the SFTP Server Adapter entry in the table and click the edit button.</li> </ol> <p></p> <ol> <li>Review the default settings and click Next.</li> </ol> <p></p> <ol> <li>Review the settings on the SFTP Server Adapter: Configuration form.</li> </ol> <p></p> <p>The default SFTP Server Listen Port must be changed to the B2Bi service port configured in OpenShift.</p> <ol> <li>Switch back to the OpenShift web console browser window or tab and click Services under the Networking in the left-hand menu bar.</li> </ol> <p></p> BP quiz question <p>There is a quiz question related to other B2Bi services. You may want to take note of the other service names or take a screen capture.</p> <ol> <li>Find and click the sterling-fg-b2bi-asi-backend-svc link.</li> </ol> <p></p> <ol> <li>Locate and copy the Node Port number for adapters-1 in the Service port mapping table.</li> </ol> <p></p> <ol> <li> <p>Record the Node Port number, it will be used several times during this demonstration.</p> </li> <li> <p>Switch back to the B2Bi Dashboard browser window or tab.</p> </li> </ol> BP quiz question <p>There is a quiz question related to configuring the SFTP adapter. Before clicking Next in the following step, look at the alternate Compression type available for the SFTP adapter. You may want to record that value.</p> <ol> <li>Enter or copy the recorded Service Port number into the SFTP Server Listen Port entry field and click Next.</li> </ol> <p></p> <ol> <li>Review the default settings on the SFTP Server Adapter: Configuration: Document Storage page and click Next.</li> </ol> <p></p> <ol> <li>Review the default settings on the SFTP Server Adapter: Add Policies page and click Next.</li> </ol> <p></p> <ol> <li>Review the default settings on the SFTP Server Adapter: Configuration page and click Next.</li> </ol> <p></p> <ol> <li>Review the default settings on the SFTP Server Adapter: Extractability page and click Next.</li> </ol> <p></p> <ol> <li>Review the SFTP Server Adapter: Confirmation page and click Finish.</li> </ol> <p></p> <ol> <li>Click Return after the new SFTP adapter has been created.</li> </ol> <p></p> <ol> <li>Click the checkbox next to the SFTP Server Adapter to start the adapter.</li> </ol> <p></p> <ol> <li>Click the  icon next to the SFTP Server Adapter.</li> </ol> <p></p> <ol> <li>Verify the SFTP Server Adapter is Running and then click the Close button.</li> </ol> <p></p> <ol> <li>Click the Logout link to log out of the B2Bi dashboard.</li> </ol> <p></p> <p>Now that the SFTP adapter is running, it time to move to the next step in the configuration of B2Bi.</p>"},{"location":"ConfigurationPart2/","title":"B2Bi Configuration Part 2","text":"<p>In this chapter, learn how to create a B2Bi partner community, add partners to the community, create a routing template, and create routing channels.</p>"},{"location":"ConfigurationPart2/#create-a-partner-community","title":"Create a partner community","text":"<ol> <li>Return to the OpenShift web console and click on the route link to the IBM Sterling File Gateway user interface (UI): sterling-fg-b2bi-asi-internal-route-filegateway.</li> </ol> <ol> <li>Enter fg_sysadmin in the User ID field, password in the Password field, and then click the Sign In button.</li> </ol> <ol> <li>Click the Participants pull-down menu item on top menu bar.</li> </ol> <ol> <li>Click Communities in the Participants menu.</li> </ol> <ol> <li>In the Communities pop-up window, click the add link.</li> </ol> <ol> <li>Enter sftp_community in the Community Name entry field and click Next.</li> </ol> <ol> <li>Select both the Partner Initiates Protocol Connections to Mailbox and the Partner Listens for Protocol Connections.</li> </ol> <ol> <li>Select the SSH/SFTP checkbox and click Next.</li> </ol> <ol> <li>Click Next on the Add Community: Notifications form.</li> </ol> <ol> <li>Click Finish to confirm the creation of the new community.</li> </ol> <ol> <li>Click Return on the community confirmation screen.</li> </ol>"},{"location":"ConfigurationPart2/#add-partners-to-the-partner-community","title":"Add partners to the partner community","text":"<p>Next, add 2 partners to the newly created sftp_community.</p> <ol> <li>Click the edit link for the sftp_community on the Communities pop-up window.</li> </ol> <p></p> <ol> <li>Under Partner, click the Add link.</li> </ol> <p></p> <ol> <li>Enter partner1 in the Partner Name field, 10 digits in the Phone field, partner1@localhost.com in the Email Address field, and then click Next.</li> </ol> <p></p> <ol> <li>Enter partner1 in the User Name field, password in the Password field, password in the Confirm Password field, Partner in the Given Name field, One in Surname field, and then click Next.</li> </ol> <p></p> <ol> <li>Click partner1 is a Producer of Data and then click Next.</li> </ol> <p></p> <ol> <li>Review the default settings on the Initiate Connections Settings screen and then click Next.</li> </ol> <p></p> <ol> <li>Review the default settings on the PGP Settings screen and then click Next.</li> </ol> <p></p> <ol> <li>Review the settings for partner1 and click Finish.</li> </ol> <p></p> <ol> <li>Click Return on the Added Partner Successful screen.</li> </ol> <p></p> <ol> <li>Repeat the Steps 13 through 20 to create a second partner named partner2 using the same settings.</li> </ol> <p></p> <ol> <li>Click Return on the Edit Community: sftp_community screen after creating both partners.</li> </ol> <p></p> <ol> <li>Close the Communities pop-up window.</li> </ol> <p></p> <ol> <li>Click Partners under the Participants menu.</li> </ol> <p></p> <ol> <li>Click the Refresh button if partner1 and partner2 do not appear in the Partners table.</li> </ol> <p></p>"},{"location":"ConfigurationPart2/#create-a-routing-template","title":"Create a routing template","text":"<ol> <li>Click Templates under the Routes menu.</li> </ol> <ol> <li>Click the Create button at the bottom of the Routing Channel Templates page.</li> </ol> <ol> <li>Enter Passthrough in the Template Name field and then click Next&gt;&gt;.</li> </ol> <ol> <li>Review the Special Characters settings and then click Next&gt;&gt;.</li> </ol> <ol> <li>Add All Partners to both the Producer Groups and Consumer Groups tables.</li> </ol> <ol> <li>Click Next&gt;&gt; after adding All Partners to both groups.</li> </ol> <ol> <li>Review the Provisioning Facts page and then click Next&gt;&gt;.</li> </ol> <ol> <li>Review the File Operation page and then click Next&gt;&gt;.</li> </ol> <ol> <li>Click the Add button on the Producer page.</li> </ol> <ol> <li>Click the Producer File Type pull-down menu and select Unknown.</li> </ol> <ol> <li>Enter .+ in the File name pattern as regular expression field and then click Save.</li> </ol> <p>Setting the file pattern to the regular expression .+ allows for file names of one or more characters.</p> <ol> <li>Click Next&gt;&gt; on the Producer page.</li> </ol> <p></p> <ol> <li>Click the Add button on the Consumer page.</li> </ol> <p></p> <ol> <li>Click the Add button on the New Delivery Channel pop-up window.</li> </ol> <p></p> <ol> <li>Click Unknown in the Consumer File Type pull-down menu.</li> </ol> <p></p> <ol> <li>Enter ${ProducerFileName} in the File name format* field.</li> </ol> <pre><code>${ProducerFileName}\n</code></pre> <ol> <li>Review the help information regarding file name formats by hovering over the File name format entry field and then click Save.</li> </ol> <p></p> <ol> <li>Click Save on the New Delivery Channel pop-up window.</li> </ol> <p></p> <ol> <li>Click Save on the Consumer page.</li> </ol> <p></p> <ol> <li>Click OK on the Routing Channel Template successfully created. pop-up message.</li> </ol> <p></p> <ol> <li>Review the settings for the new Passthrough routing channel template.</li> </ol> <p></p>"},{"location":"ConfigurationPart2/#create-routing-channels","title":"Create routing channels","text":"<ol> <li>Click the Channels option under the Routes menu.</li> </ol> <ol> <li>Click the Create button at bottom right to create a new Channel.</li> </ol> <ol> <li>Select Passthrough for the Routing Channel Template, partner1 for the Producer, and partner2 for the Consumer, and then click Save to create the new channel.</li> </ol> <ol> <li>Click OK on the Success pop-up window.</li> </ol> <ol> <li>Repeat the steps 48 through 50 to create a channel from partner2 to partner1.</li> </ol> <ol> <li>Click Sign Out.</li> </ol> <p>In the next chapter, the fun begins as the partners start to securely exchange files.</p>"},{"location":"DemoPreparation-Bastion/","title":"Environment Preparation and B2Bi Installation using IBM Cloud Shell","text":"<p>This demonstration guide assumes a Red Hat OpenShift cluster running on VMware on IBM Cloud environment provisioned in IBM Technology Zone (ITZ) here.</p> <p>At this point, all users should have completed the steps in the IBM Sterling Data Exchange Level 3 learning plan to reserve the Red Hat OpenShift environment as described in the IBM Sterling Data Exchange Level 3 Introduction video. Before proceeding, validate that the reservation has been fully provisioned and is in the Ready state in ITZ. If not, please complete those steps before proceeding.</p> <p>Warning</p> <p>Note, some screen captures below will show the name of the ITZ environment as OpenShift Cluster (VMware on IBM Cloud) - IPI. This demonstration script now uses the ITZ environment OpenShift Cluster (VMware on IBM Cloud) - UPI. </p> <p></p> <p>The following steps must be performed before delivering the demonstration. These steps should be performed well in advance of starting an actual client demonstration as it will take approximately 90 minutes for all steps to complete.</p>"},{"location":"DemoPreparation-Bastion/#access-the-openshift-web-console-and-verify-the-openshift-clusters-health","title":"Access the OpenShift web console and verify the OpenShift cluster's health","text":"<ol> <li>From the ITZ My Reservations page, click the tile for your OpenShift cluster reservation (must be in the Ready state).</li> </ol> <p>At this time, make note of the Username and Password fields under the Shared Reservation heading as highlighted above. You will need these values in the next steps.</p> <ol> <li>Click the Open your IBM Cloud environment  button on the reservations detail page.</li> </ol> <p>A new window or tab will open in your browser.</p> <ol> <li>Enter the Username and Password for your OpenShift cluster (as described in step 1 above) and click the Log in button.</li> </ol> <p></p> <p>Before proceeding, verify that all 3 worker nodes were properly provisioned and available.</p> <ol> <li>Click the Compute menu option in left-hand menu bar and then click the Nodes menu option.</li> </ol> <p></p> <ol> <li>Observe the Nodes that have the role of worker.  There should be 3 of them with a status of Ready.</li> </ol> <p></p> <p>Are less than 3 worker nodes available and  Ready**?</p> <p>If there are less than 3 worker nodes in the Ready state, it is very likely you will encounter issues during the installation of IBM Sterling B2B Integrator. It is highly recommended to delete the current ITZ reservation and create a new one following the earlier instructions. Alternatively, you can open a ticket with the ITZ support team using the #itz-techzone-support slack channel and see if the support team can fix the broken node(s).</p>"},{"location":"DemoPreparation-Bastion/#access-the-bastion-server-for-the-itz-environment","title":"Access the Bastion server for the ITZ environment","text":"<p>In the next steps, you will access a virtual machine running in IBM Cloud referred to as a Bastion server. This server will be used to run various IBM Cloud, OpenShift, and other command line interfaces to install IBM Sterling B2B Integrator on the OpenShift cluster. </p> <p>To access the Bastion server, you must create a remote shell from your local workstation to the Bastion using a secure shell protocol client (ssh). Most operating systems (MacOS, Linux, Microsoft Windows) have an ssh client built in. There are also 3rd party and open source clients like putty that can be utilized.</p> <p>The screen images that follow utilize the native MacOS ssh client running from a terminal window. Specific instructions for other operating systems are not provided, but should be similar.</p> <ol> <li>Copy the Bastion SSH connection string for your ITZ reservation details page.</li> </ol> <p></p> <p>At this time, make note of the Bastion Password field as highlighted above. You will need this password in the next step.</p> <ol> <li>Open a terminal or command line window on your local workstation.</li> <li>In your local terminal or command line window, paste the Bastion SSH connection string and press enter.</li> </ol> <p></p> <ol> <li>If prompted to accept the fingerprint, enter yes</li> </ol> <p></p> <ol> <li>Enter the Bastion Password when prompted for a password.</li> </ol> <p></p>"},{"location":"DemoPreparation-Bastion/#create-install-directory-and-retrieve-the-b2bi-installation-scripts","title":"Create install directory and retrieve the B2Bi installation scripts","text":"<ol> <li>Create a new directory for the B2Bi installation scripts.</li> </ol> <pre><code>mkdir b2bi\n</code></pre> <ol> <li>Set the PROJECT_DIR environment variable.</li> </ol> <pre><code>export PROJECT_DIR=$HOME/b2bi\n</code></pre> <ol> <li>Change directories to PROJECT_DIR.</li> </ol> <pre><code>cd $PROJECT_DIR\n</code></pre> <ol> <li>Download the B2Bi installation script.</li> </ol> <pre><code>wget -O rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip?raw=true\n</code></pre> Example output <p>[admin@bastion b2bi]$  wget -O rapid-lab-b2bi-newdb-61051-CloudShell.zip https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip?raw=true</p> <p>--2023-03-22 17:43:41--  https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip?raw=true</p> <p>Resolving github.com (github.com)... 140.82.114.4</p> <p>Connecting to github.com (github.com)|140.82.114.4|:443... connected.</p> <p>HTTP request sent, awaiting response... 302 Found Location: https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip [following]</p> <p>--2023-03-22 17:43:41--  https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip</p> <p>Reusing existing connection to github.com:443.</p> <p>HTTP request sent, awaiting response... 302 Found</p> <p>Location: https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip [following]</p> <p>--2023-03-22 17:43:41--  https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip</p> <p>Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...</p> <p>Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.</p> <p>HTTP request sent, awaiting response... 200 OK</p> <p>Length: 26769 (26K) [application/zip]</p> <p>Saving to: \u2018rapid-lab-b2bi-newdb-61051-CloudShell.zip\u2019</p> <p>rapid-lab-b2bi-newdb-610 100%[===============================&gt;]  26.14K  --.-KB/s    in 0s      </p> <p>2023-03-22 17:43:42 (98.2 MB/s) - \u2018rapid-lab-b2bi-newdb-61051-CloudShell.zip\u2019 saved [26769/26769]</p> <p>[admin@bastion b2bi]$ </p> <ol> <li>Unzip the installation script.</li> </ol> <pre><code>unzip rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip\n</code></pre> Example output <p>[admin@bastion b2bi]$ unzip rapid-lab-b2bi-newdb-61051-CloudShell.zip </p> <p>Archive:  rapid-lab-b2bi-newdb-61051-CloudShell.zip</p> <p>inflating: COPYING                 </p> <p>inflating: README.md               </p> <p>inflating: deploy_b2bi.sh          </p> <p>inflating: deploy_db2.sh           </p> <p>inflating: deploy_mq.sh            </p> <p>inflating: edited-values.yaml      </p> <p>inflating: env.sh                  </p> <p>inflating: ocp-cli.sh              </p> <p>inflating: prepare_db2.sh          </p> <p>[admin@bastion b2bi]$ </p>"},{"location":"DemoPreparation-Bastion/#install-the-ibm-cloud-command-line-interfaces-clis-openshift-clis-and-helm","title":"Install the IBM Cloud command line interfaces (CLIs), OpenShift CLIs, and Helm","text":"<ol> <li>Run the ocp-cli.sh shell script to install the required tools.</li> </ol> <pre><code>./ocp-cli.sh\n</code></pre> Example output <p>[admin@bastion b2bi]$ ./ocp-cli.sh </p> <p>Installing ibmcloud utility. Wait!</p> <p>Installing Helm. Wait!</p> <p>Installing OpenShift oc utility. Wait!</p> <p>Installing Kubernetes kubectl. Wait!</p> <p>cleaning up. Wait!</p> <p>Checking versions</p> <p>Client Version: 4.11.31</p> <p>Kustomize Version: v4.5.4</p> <p>version.BuildInfo{Version:\"v3.11.2\", GitCommit:\"912ebc1cd10d38d340f048efaf0abda047c3468e\", GitTreeState:\"clean\", GoVersion:\"go1.18.10\"}</p> <p>Flag --short has been deprecated, and will be removed in the future. The --short output will become the default.</p> <p>Client Version: v1.24.11</p> <p>Kustomize Version: v4.5.4</p> <p>ibmcloud version 2.15.0+79fb346-2023-02-21T22:06:52+00:00</p> <p>[admin@bastion b2bi]$ </p>"},{"location":"DemoPreparation-Bastion/#authenticate-to-the-openshift-cluster","title":"Authenticate to the OpenShift cluster","text":"<p>For the next steps, the OpenShift login command to authenticate to the OpenShift cluster must be retrieved and executed.</p> <ol> <li> <p>Switch to the OpenShift web console browser window or tab opened earlier.</p> </li> <li> <p>Click the IAM identity drop-down menu at top right of the OpenShift web console and click the Copy login command option.</p> </li> </ol> <p></p> <ol> <li>Click the Display Token link.</li> </ol> <p></p> <ol> <li>Copy the string in the Log in with this token field.</li> </ol> <p></p> <ol> <li>Switch back to the terminal with the open ssh session to the Bastion server.</li> <li>Paste the oc login command line copied in step 20.</li> </ol> <p>Example output</p> <p>[admin@bastion b2bi]$ oc login --token=sha256~KGOvFlJmXVd1UhyThw76v5TwGcv4FCMdnZIGJ6KJcaA --server=https://api.ocp-2700039nft-2v51.cloud.techzone.ibm.com:6443</p> <p>Logged into \"https://api.ocp-2700039nft-2v51.cloud.techzone.ibm.com:6443\" as \"kube:admin\" using the token provided.</p> <p>You have access to 71 projects, the list has been suppressed. You can list all projects with 'oc projects'</p> <p>Using project \"default\".</p> <p>Welcome! See 'oc help' to get started.</p> <p>[admin@bastion b2bi]$ </p>"},{"location":"DemoPreparation-Bastion/#install-db2-in-the-openshift-cluster","title":"Install Db2 in the OpenShift cluster","text":"<ol> <li>Run the environment setup and Db2 deploy scripts.</li> </ol> <pre><code>. env.sh ; ./deploy_db2.sh\n</code></pre> Example output <p>Now using project \"db2\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\".</p> <p>You can add applications to this project with the 'new-app' command. For example, try:</p> <p>oc new-app rails-postgresql-example</p> <p>to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:</p> <p>kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname</p> <p>serviceaccount/db2 created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"db2\" secret/db2-secret created service/db2-ci created service/db2-lb created statefulset.apps/db2 created</p> <p>Wait 5 minutes...</p> <p>Wait approximately 5 minutes for the Db2 containers to start loading in OpenShift before executing the next step.</p> Optional: monitor events in OpenShift web console <p>Use the OpenShift web console to monitor the Db2 project events and pod creation.  </p> <ol> <li>Verify Db2 is up and running in the OpenShift cluster.</li> </ol> <pre><code>oc logs -f ${DB2_NAME}-0\n</code></pre> <p>Failure</p> <p>If no output is seen from the above command, or if it returns the following message:</p> <p>Error from server (BadRequest): container \"db2\" in pod \"db2-0\" is waiting to start: ContainerCreating</p> <p>wait and rerun oc logs -f ${DB2_NAME}-0 until the output starts steaming as shown in the example output below.</p> <p>Example output</p> <p>(*) Previous setup has not been detected. Creating the users...</p> <p>(*) Creating users ...</p> <p>(*) Creating instance ...</p> <p>DB2 installation is being initialized.</p> <p>Total number of tasks to be performed: 4 Total estimated time for all tasks to be performed: 309 second(s)</p> <p>Task #1 start Description: Setting default global profile registry variables Task #1 end</p> <p>Task #2 start Description: Initializing instance list Estimated time 5 second(s) Task #2 end</p> <p>Task #3 start Description: Configuring DB2 instances Estimated time 300 second(s) Task #3 end</p> <p>Task #4 start Description: Updating global profile registry Estimated time 3 second(s) Task #4 end</p> <pre><code>...\n**Long output - truncated in this example**\n...\n</code></pre> <p>2022-10-18-16.44.43.180954+000 I33681E386            LEVEL: Warning PID     : 15858                TID : 139996146354048 PROC : db2start</p> <p>INSTANCE: db2inst1             NODE : 000</p> <p>HOSTNAME: db2-0</p> <p>FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078</p> <p>MESSAGE : Released lock on the file:</p> <p>DATA #1 : String, 50 bytes</p> <p>/database/config/db2inst1/sqllib/ctrl/db2strst.lck</p> <p>Do not proceed until...</p> <p>Do not proceed to the next step until the following line appears in the output:</p> <p>/database/config/db2inst1/sqllib/ctrl/db2strst.lck</p> <ol> <li>Stop the oc logs command by entering Ctrl+c on the keyboard.</li> </ol> <p>Example output</p> <p>... FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078</p> <p>MESSAGE : Released lock on the file:</p> <p>DATA #1 : String, 50 bytes</p> <p>/database/config/db2inst1/sqllib/ctrl/db2strst.lck</p> <p>^C</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$</p>"},{"location":"DemoPreparation-Bastion/#configure-db2-and-create-the-required-b2bi-tables","title":"Configure Db2 and create the required B2Bi tables","text":"<ol> <li>Prepare the Db2 instance running in OpenShift.</li> </ol> <pre><code>./prepare_db2.sh\n</code></pre> <p>This script does not generate output.</p> <ol> <li>Remotely connect to the Db2 container running in OpenShift.</li> </ol> <pre><code>oc rsh pod/${DB2_NAME}-0 su - db2inst1\n</code></pre> <p>Example output</p> <p>Last login: Tue Oct 18 20:47:33 UTC 2022</p> <p>[db2inst1@db2-0 ~]$</p> <p>A remote connection is now open to the Db2 container running in OpenShift as shown by the change in the command prompt to: [db2inst1@db2-0 ~]$</p> <ol> <li>Run the db2reg.sh script.</li> </ol> <pre><code>./db2reg.sh\n</code></pre> Example output <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <ol> <li>Create the B2Bi tables in Db2.</li> </ol> <pre><code>db2 -stvf create_scc_db_b2bidb.sql\n</code></pre> <p>This will take ~5 minutes</p> <p>This command will take approximately 5 minutes to complete.</p> Example output <p>CREATE DATABASE B2BIDB AUTOMATIC STORAGE YES USING CODESET UTF-8 TERRITORY US COLLATE USING IDENTITY PAGESIZE 4096 DFT_EXTENT_SZ 32</p> <p>DB20000I  The CREATE DATABASE command completed successfully.</p> <p>CONNECT TO B2BIDB</p> <p>Database Connection Information</p> <p>Database server        = DB2/LINUXX8664 11.5.5.1  SQL authorization ID   = DB2INST1  Local database alias   = B2BIDB</p> <p>UPDATE DATABASE CONFIG USING STMT_CONC LITERALS</p> <p>DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.</p> <p>... Long output - truncated in this example ...</p> <p>CREATE USER TEMPORARY TABLESPACE UTEMP4KTS IN DATABASE PARTITION GROUP IBMDEFAULTGROUP PAGESIZE 4 K MANAGED BY AUTOMATIC STORAGE EXTENTSIZE 32 BUFFERPOOL UTEMP4KBP FILE SYSTEM CACHING</p> <p>DB20000I  The SQL command completed successfully.</p> <p>CONNECT RESET</p> <p>DB20000I  The SQL command completed successfully.</p> <ol> <li>Run the final Db2 update script.</li> </ol> <pre><code>./db2-update.sh\n</code></pre> Example output <p>Database Connection Information</p> <p>Database server        = DB2/LINUXX8664 11.5.5.1 SQL authorization ID   = DB2INST1 Local database alias   = B2BIDB</p> <p>DB20000I  The SQL command completed successfully. DB20000I  The TERMINATE command completed successfully. DB20000I  The FORCE APPLICATION command completed successfully. DB21024I  This command is asynchronous and may not be effective immediately.</p> <p>DB20000I  The DEACTIVATE DATABASE command completed successfully.</p> <p>10/18/2022 16:53:39     0   0   SQL1064N  DB2STOP processing was successful.</p> <p>SQL1064N  DB2STOP processing was successful.</p> <p>10/18/2022 16:53:41     0   0   SQL1063N  DB2START processing was successful.</p> <p>SQL1063N  DB2START processing was successful.</p> <ol> <li>Exit the connection to the Db2 container in OpenShift.</li> </ol> <pre><code>exit\n</code></pre> <p>Notice the command line prompt has changed back to the prompt for the ssh session to the Bastion server.</p>"},{"location":"DemoPreparation-Bastion/#install-mq-in-the-openshift-cluster","title":"Install MQ in the OpenShift cluster","text":"<ol> <li>Deploy MQ to OpenShift.</li> </ol> <pre><code>./deploy_mq.sh\n</code></pre> Example output <p>Now using project \"mq\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\".</p> <p>You can add applications to this project with the 'new-app' command. For example, try:</p> <p>oc new-app rails-postgresql-example</p> <p>to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:</p> <p>kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname</p> <p>serviceaccount/mq created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"mq\" service/mq-data created service/mq-web created</p> <p>W1018 16:54:39.757566   34060 shim_kubectl.go:58] Using non-groupfied API resources is deprecated and will be removed in a future release, update apiVersion to \"route.openshift.io/v1\" for your resource</p> <p>route.route.openshift.io/mq-web created</p> <p>secret/mq-secret created</p> <p>statefulset.apps/mq created</p>"},{"location":"DemoPreparation-Bastion/#update-the-environment-variables-with-ibm-container-entitlement-key-and-e-mail-address","title":"Update the environment variables with IBM container entitlement key and e-mail address","text":"<p>The next steps require editing of a file using the vi editor. If you are not familiar with the vi editor, it is strongly recommend to watch the following video before proceeding. There is no audio for this video.</p> <p></p> <ol> <li>Open the vi editor.</li> </ol> <pre><code>vi  env.sh\n</code></pre> <ol> <li>Open the IBM Entitlement key page here.</li> </ol> <p>Note, re-authentication to ibm.com may be required.</p> <ol> <li>If an entitlement key does not already exist, click Add new key.</li> </ol> <p></p> <ol> <li>Click the Copy button.</li> </ol> <p></p> <ol> <li>Return to the IBM Cloud Shell window, use the arrow keys to move the cursor between the quotes in the export APIKEY line, press i to enter input mode, and paste the copied entitlement key between the quotes.</li> <li>Press the esc key to exit input mode.</li> <li>Arrow key down and over to between the quotes in the export EMAIL=\"\" line, press i to enter input mode, and enter a your e-mail address.</li> <li>Press the esc key to exit input mode.</li> <li>Press the : key and then the x key and enter to save and exit the vi editor.</li> <li>Verify the env.sh file looks like the example output below.</li> </ol> <pre><code>cat env.sh\n</code></pre> <p>Example output</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$ cat env.sh</p> <p>#!/usr/bin/bash</p> <p>## Locate your APIKEY (Entitlement Key For Container Software)</p> <p>## here: https://myibm.ibm.com/products-services/containerlibrary</p> <p>## Requires IBM ID and permission.</p> <p>export PROJECT_NAME=\"b2bi\"</p> <p>export PROJECT_DIR=\"$HOME/b2bi\"</p> <p>export DB2_NAME=\"db2\"</p> <p>export MQ_NAME=\"mq\"</p> <p>export APIKEY=\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"</p> <p>export EMAIL=\"andrew@jones-tx.com\"</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$</p>"},{"location":"DemoPreparation-Bastion/#install-b2bi-in-the-openshift-cluster","title":"Install B2Bi in the OpenShift cluster","text":"<ol> <li>Deploy the B2Bi related containers on OpenShift.</li> </ol> <pre><code>./deploy_b2bi.sh\n</code></pre> <p>This will take approximately 70 minutes</p> <p>This script will take approximately 70 minutes to complete.</p> Optional: monitor events in the OpenShift web console <p>Use the OpenShift web console to monitor the b2bi project events and pod creation.  </p> Example output beginning. <p>Now using project \"b2bi\" on server \"https://c103-e.us-south.containers.cloud.ibm.com:31501\".</p> <p>You can add applications to this project with the 'new-app' command. For example, try:</p> <p>oc new-app rails-postgresql-example</p> <p>to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:</p> <p>kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname</p> <p>... Long output - truncated in this example ...</p> <p>ibm-b2bi-prod/charts/ibm-sch/ibm_cloud_pak/pak_extensions/pre-install/namespace-administration/role.yaml</p> <p>ibm-b2bi-prod/charts/ibm-sch/ibm_cloud_pak/pak_extensions/pre-install/namespace-administration/rolebinding.yaml</p> <p>ibm-b2bi-prod/charts/ibm-sch/ibm_cloud_pak/pak_extensions/pre-install/namespace-administration/serviceaccount.yaml</p> <p>ibm-b2bi-prod/charts/ibm-sch/ibm_cloud_pak/pak_extensions/pre-install/namespace-administration/setupNamespace.sh</p> Example output ending. <p>... Long output - truncated in this example ...</p> <p>NAME: sterling-fg</p> <p>LAST DEPLOYED: Wed Mar 22 18:06:32 2023</p> <p>NAMESPACE: b2bi</p> <p>STATUS: deployed</p> <p>REVISION: 1</p> <p>NOTES:</p> <p>Please wait while the application is getting deployed.</p> <ol> <li>Run the below command to check the status of application server replica sets. At least 1 replica must be in 'READY' state. </li> </ol> <p>kubectl get replicasets -l release=sterling-fg -n b2bi</p> <ol> <li>Run the below command to check the status of the application  server pods for the release.</li> </ol> <p>kubectl get pods -l release=sterling-fg -n b2bi -o wide</p> <p>To view the logs for a pod, run the below command.</p> <p>kubectl logs  -n b2bi</p> <ol> <li>Access the application by running the following url</li> </ol> <p>Below app defined PVC name configuration will be deprecated in future release</p> <p>Do not close the ssh session or the terminal window until the command completes. Once the command  successfully completes, the ssh session can be closed (type exit at the command prompt or simply close the terminal window).</p>"},{"location":"DemoPreparation-Bastion/#verify-all-three-b2bi-pods-are-running-in-openshift","title":"Verify all three B2Bi pods are running in OpenShift","text":"<ol> <li>Return to the OpenShift web console window in your browser.</li> <li>Click the Home menu on the right-hand menu bar, and then click Projects.</li> </ol> <ol> <li>Click the b2bi project link.</li> <li>Click the Pods link under Inventory.</li> </ol> <p>There should be 3 pods in the b2bi project. The pods will go through various states while starting up. Do not proceed to the next chapter until all 3 pods have a Status of Running AND the Ready column shows 1/1 for each pod! Note, it may take several minutes for the sterling-fg-b2bi-asi-server-0 pod to change the Ready state from 0/1 to 1/1. You may observe this pod restarting multiple times.  This is normal, just be patient.</p> <p></p> <p>That concludes the setup of the environment. Proceed to the next part of the demonstration guide to configure B2Bi.</p>"},{"location":"DemoPreparation-CloudShell/","title":"DemoPreparation CloudShell","text":"<p>This demonstration guide assumes a Custom ROKS environment provisioned from IBM Technology Zone (ITZ) here.</p> <p>At this point, all users should have completed the steps in the IBM Sterling Data Exchange Level 3 learning plan to reserve the Red Hat OpenShift on IBM Cloud environment as described in the IBM Sterling Data Exchange Level 3 Introduction video. Before proceeding, validate that the reservation has been fully provisioned and is in the Ready state in ITZ. If not, please complete those steps before proceeding.</p> <p></p> <p>The following steps must be performed before delivering the demonstration. These steps should be performed well in advance of starting an actual client demonstration as it will take approximately 90 minutes for all steps to complete.</p>"},{"location":"DemoPreparation-CloudShell/#accept-invitation-to-join-the-itz-ibm-cloud-account-for-the-custom-roks-reservation","title":"Accept invitation to join the ITZ IBM Cloud account for the Custom ROKS reservation","text":"<ol> <li>Open the You are invited to join an account in IBM Cloud email received from IBM Cloud and click the Join now link.</li> </ol> Did not get an e-mail from IBM Cloud? <p>If you did not receive an e-mail from IBM Cloud inviting you to join the 2112072 - ITZ - V2, but you did receive a notification from ITZ that your environment was ready, try the following:</p> <ul> <li>Log into cloud.ibm.com using your IBM Cloud ID.</li> <li>Click the .</li> <li>Look for a new notification with the subject: Action required: You are invited to join an account in IBM Cloud.</li> <li>Click on the notification and then click the Join now link.</li> </ul> <p>If you do not see a notification or an e-mail, try deleting the existing reservation in ITZ and try creating a new one. If that doesn't work, open a support ticket in the #itz-techzone-support Slack channel.  Include the reservation ID and summarize the problem in your message.</p> <ol> <li>In the browser window that opens, click the Join Account button.</li> </ol> <p></p> <p>Follow the steps to login to IBM Cloud.</p> <ol> <li>On the IBM Cloud Dashboard set the current account to 2112072 - ITZ - V2.</li> </ol> <p></p> Not seeing 2112072 - ITZ - V2? <p>It is possible ITZ provisioned the OpenShift cluster in a different IBM Cloud account. Select the account specified in the ITZ reservation. </p>"},{"location":"DemoPreparation-CloudShell/#access-the-openshift-web-console","title":"Access the OpenShift web console","text":"<ol> <li>Click the OpenShift  icon in the left-hand menu bar.</li> </ol> <ol> <li>Click Clusters.</li> </ol> <ol> <li>Click the OpenShift cluster name in the table.</li> </ol> <p>Note: the cluster name will be different than seen in the above image.</p> <ol> <li>Click the OpenShift web console button.</li> </ol> <p></p> <p>At this time, a page like the one below should open in a new browser window or tab.</p> <p></p> <p>Leave this browser window open. It will be used again later.</p>"},{"location":"DemoPreparation-CloudShell/#retrieve-the-b2bi-installation-scripts","title":"Retrieve the B2Bi installation scripts","text":"<p>In this part of the demonstration, you will use the IBM Cloud Shell. If you are not familiar with IBM Cloud Shell, you can learn about it here.</p> <p>Warning</p> <p>It is critical all steps in this section be completed in a single instance of IBM Cloud Shell. If the shell becomes inactive for more than 20 minutes, it will be closed. Additionally, local files will not persist after 2 hours of inactivity. In this section, files are downloaded, modified, and long running commands are executed. Please allot approximately 90 continuous minutes to complete this section of the demonstration script. Note, the last step is a long running (~60 minutes) automated script. Once started, keep the Cloud Shell browser window/tab open and allow the process to complete. No further user interaction will be required once it is started. Not completing this section in a single instance of IBM Cloud Shell will leave the B2Bi deployment to OpenShift in an inconsistent state. A new ITZ environment will need to be provisioned and this section will need to be re-executed.</p> <p>Tip</p> <p>Use the copy capability of the demonstration guide to copy and paste commands to the IBM Cloud Command Shell to avoid typing errors.</p> <ol> <li>In the IBM Cloud Portal, with the demonstration account selected (2112072 - ITZ - V2), click the IBM Cloud Shell icon.</li> </ol> <p></p> <p>The IBM Cloud Shell will open in a new browser tab or window. It may take a few seconds for the shell to initialize.</p> <p></p> <ol> <li>Create a new directory for the B2Bi installation scripts.</li> </ol> <pre><code>mkdir b2bi\n</code></pre> <ol> <li>Set the PROJECT_DIR environment variable.</li> </ol> <pre><code>export PROJECT_DIR=$HOME/b2bi\n</code></pre> <ol> <li>Change directories to PROJECT_DIR.</li> </ol> <pre><code>cd $PROJECT_DIR\n</code></pre> <ol> <li>Download the B2Bi installation script.</li> </ol> <pre><code>wget -O rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip?raw=true\n</code></pre> Example output <p>--2022-10-18 20:12:56--  https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newdb-61051.zip?raw=true</p> <p>Resolving github.com (github.com)... 140.82.113.4</p> <p>Connecting to github.com (github.com)|140.82.113.4|:443... connected.</p> <p>HTTP request sent, awaiting response... 302 Found</p> <p>Location: https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-61051.zip [following]</p> <p>--2022-10-18 20:12:56--  https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-61051.zip</p> <p>Reusing existing connection to github.com:443.</p> <p>HTTP request sent, awaiting response... 302 Found</p> <p>Location: https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-61051.zip [following]</p> <p>--2022-10-18 20:12:57--  https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-61051.zip</p> <p>Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...</p> <p>Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.</p> <p>HTTP request sent, awaiting response... 200 OK</p> <p>Length: 4061226 (3.9M) [application/zip]</p> <p>Saving to: \u2018rapid-lab-b2bi-newlab-61051.zip\u2019</p> <p>rapid-lab-b2bi-newlab-61051.zip                             100%[=========================================================================================================================================&gt;]   3.87M  --.-KB/s    in 0.03s</p> <p>2022-10-18 20:12:57 (147 MB/s) - \u2018rapid-lab-b2bi-newlab-61051.zip\u2019 saved [4061226/4061226]</p> <ol> <li>Unzip the installation script.</li> </ol> <pre><code>unzip rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip\n</code></pre> Example output <p>Archive:  rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip</p> <p>inflating: deploy_mq.sh</p> <p>inflating: edited-values.yaml</p> <p>inflating: prepare_db2.sh</p> <p>inflating: deploy_db2.sh</p> <p>inflating: README.md</p> <p>inflating: COPYING</p> <p>inflating: env.sh</p> <p>inflating: deploy_b2bi.sh</p> <p>inflating: db2jcc4.jar</p>"},{"location":"DemoPreparation-CloudShell/#authenticate-to-the-openshift-cluster","title":"Authenticate to the OpenShift cluster","text":"<p>For the next steps, the OpenShift login command to authenticate to the OpenShift cluster must be retrieved and executed.</p> <ol> <li>Switch to the OpenShift web console browser window or tab.</li> </ol> <p></p> <ol> <li>Click the IAM identity drop-down menu at top right of the OpenShift web console and click the Copy login command option.</li> </ol> <p></p> <ol> <li>Click the Display Token link.</li> </ol> <p></p> <ol> <li>Copy the string in the Log in with this token field.</li> </ol> <p></p> <ol> <li>Switch back to the IBM Cloud Shell browser window or tab from earlier.</li> <li>Paste the oc login command line copied in step 17 into the IBM Cloud Shell window and press enter.</li> </ol> <p>Example output</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$ oc login --token=sha256~XXXXXXXXXXXXXXXXXX --server=https://c103-e.us-south.containers.cloud.ibm.com:31501</p> <p>Logged into \"https://c103-e.us-south.containers.cloud.ibm.com:31501\" as \"IAM#andrew@jones-tx.com\" using the token provided.</p> <p>You have access to 66 projects, the list has been suppressed. You can list all projects with 'oc projects'</p> <p>Using project \"default\".</p> <p>Welcome! See 'oc help' to get started.</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$</p>"},{"location":"DemoPreparation-CloudShell/#install-db2-in-the-openshift-cluster","title":"Install Db2 in the OpenShift cluster","text":"<ol> <li>Run the environment setup and Db2 deploy scripts.</li> </ol> <pre><code>. env.sh ; ./deploy_db2.sh\n</code></pre> Example output <p>Now using project \"db2\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\".</p> <p>You can add applications to this project with the 'new-app' command. For example, try:</p> <p>oc new-app rails-postgresql-example</p> <p>to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:</p> <p>kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname</p> <p>serviceaccount/db2 created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"db2\" secret/db2-secret created service/db2-ci created service/db2-lb created statefulset.apps/db2 created</p> <p>Wait 5 minutes...</p> <p>Wait approximately 5 minutes for the Db2 containers to start loading in OpenShift before executing the next step.</p> Optional: monitor events in OpenShift web console <p>Use the OpenShift web console to monitor the Db2 project events and pod creation.  </p> <ol> <li>Verify Db2 is up and running in the OpenShift cluster.</li> </ol> <pre><code>oc logs -f ${DB2_NAME}-0\n</code></pre> <p>Failure</p> <p>If no output is seen from the above command, or if it returns the following message:</p> <p>Error from server (BadRequest): container \"db2\" in pod \"db2-0\" is waiting to start: ContainerCreating</p> <p>wait and rerun oc logs -f ${DB2_NAME}-0 until the output starts steaming as shown in the example output below.</p> <p>Example output</p> <p>(*) Previous setup has not been detected. Creating the users...</p> <p>(*) Creating users ...</p> <p>(*) Creating instance ...</p> <p>DB2 installation is being initialized.</p> <p>Total number of tasks to be performed: 4 Total estimated time for all tasks to be performed: 309 second(s)</p> <p>Task #1 start Description: Setting default global profile registry variables Task #1 end</p> <p>Task #2 start Description: Initializing instance list Estimated time 5 second(s) Task #2 end</p> <p>Task #3 start Description: Configuring DB2 instances Estimated time 300 second(s) Task #3 end</p> <p>Task #4 start Description: Updating global profile registry Estimated time 3 second(s) Task #4 end</p> <pre><code>...\n**Long output - truncated in this example**\n...\n</code></pre> <p>2022-10-18-16.44.43.180954+000 I33681E386            LEVEL: Warning PID     : 15858                TID : 139996146354048 PROC : db2start</p> <p>INSTANCE: db2inst1             NODE : 000</p> <p>HOSTNAME: db2-0</p> <p>FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078</p> <p>MESSAGE : Released lock on the file:</p> <p>DATA #1 : String, 50 bytes</p> <p>/database/config/db2inst1/sqllib/ctrl/db2strst.lck</p> <p>Do not proceed until...</p> <p>Do not proceed to the next step until the following line appears in the output:</p> <p>/database/config/db2inst1/sqllib/ctrl/db2strst.lck</p> <ol> <li>Stop the oc logs command by entering Ctrl+c on the keyboard.</li> </ol> <p>Example output</p> <p>... FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078</p> <p>MESSAGE : Released lock on the file:</p> <p>DATA #1 : String, 50 bytes</p> <p>/database/config/db2inst1/sqllib/ctrl/db2strst.lck</p> <p>^C</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$</p>"},{"location":"DemoPreparation-CloudShell/#configure-db2-and-create-the-required-b2bi-tables","title":"Configure Db2 and create the required B2Bi tables","text":"<ol> <li>Prepare the Db2 instance running in OpenShift.</li> </ol> <pre><code>./prepare_db2.sh\n</code></pre> <p>This script does not generate output.</p> <ol> <li>Remotely connect to the Db2 container running in OpenShift.</li> </ol> <pre><code>oc rsh pod/${DB2_NAME}-0 su - db2inst1\n</code></pre> <p>Example output</p> <p>Last login: Tue Oct 18 20:47:33 UTC 2022</p> <p>[db2inst1@db2-0 ~]$</p> <p>A remote connection is now open to the Db2 container running in OpenShift as shown by the change in the command prompt to: [db2inst1@db2-0 ~]$</p> <ol> <li>Run the db2reg.sh script.</li> </ol> <pre><code>./db2reg.sh\n</code></pre> Example output <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <ol> <li>Create the B2Bi tables in Db2.</li> </ol> <pre><code>db2 -stvf create_scc_db_b2bidb.sql\n</code></pre> <p>This will take ~5 minutes</p> <p>This command will take approximately 5 minutes to complete.</p> Example output <p>CREATE DATABASE B2BIDB AUTOMATIC STORAGE YES USING CODESET UTF-8 TERRITORY US COLLATE USING IDENTITY PAGESIZE 4096 DFT_EXTENT_SZ 32</p> <p>DB20000I  The CREATE DATABASE command completed successfully.</p> <p>CONNECT TO B2BIDB</p> <p>Database Connection Information</p> <p>Database server        = DB2/LINUXX8664 11.5.5.1  SQL authorization ID   = DB2INST1  Local database alias   = B2BIDB</p> <p>UPDATE DATABASE CONFIG USING STMT_CONC LITERALS</p> <p>DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.</p> <p>... Long output - truncated in this example ...</p> <p>CREATE USER TEMPORARY TABLESPACE UTEMP4KTS IN DATABASE PARTITION GROUP IBMDEFAULTGROUP PAGESIZE 4 K MANAGED BY AUTOMATIC STORAGE EXTENTSIZE 32 BUFFERPOOL UTEMP4KBP FILE SYSTEM CACHING</p> <p>DB20000I  The SQL command completed successfully.</p> <p>CONNECT RESET</p> <p>DB20000I  The SQL command completed successfully.</p> <ol> <li>Run the final Db2 update script.</li> </ol> <pre><code>./db2-update.sh\n</code></pre> Example output <p>Database Connection Information</p> <p>Database server        = DB2/LINUXX8664 11.5.5.1 SQL authorization ID   = DB2INST1 Local database alias   = B2BIDB</p> <p>DB20000I  The SQL command completed successfully. DB20000I  The TERMINATE command completed successfully. DB20000I  The FORCE APPLICATION command completed successfully. DB21024I  This command is asynchronous and may not be effective immediately.</p> <p>DB20000I  The DEACTIVATE DATABASE command completed successfully.</p> <p>10/18/2022 16:53:39     0   0   SQL1064N  DB2STOP processing was successful.</p> <p>SQL1064N  DB2STOP processing was successful.</p> <p>10/18/2022 16:53:41     0   0   SQL1063N  DB2START processing was successful.</p> <p>SQL1063N  DB2START processing was successful.</p> <ol> <li>Exit the connection to the Db2 container in OpenShift.</li> </ol> <pre><code>exit\n</code></pre> Example output <p>logout itzuser@itz-2700039nft-srv4:~/b2bi$</p> <p>Notice the command line prompt has changed back to the prompt for IBM Cloud Shell.</p>"},{"location":"DemoPreparation-CloudShell/#install-mq-in-the-openshift-cluster","title":"Install MQ in the OpenShift cluster","text":"<ol> <li>Deploy MQ to OpenShift.</li> </ol> <pre><code>./deploy_mq.sh\n</code></pre> Example output <p>Now using project \"mq\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\".</p> <p>You can add applications to this project with the 'new-app' command. For example, try:</p> <p>oc new-app rails-postgresql-example</p> <p>to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:</p> <p>kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname</p> <p>serviceaccount/mq created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"mq\" service/mq-data created service/mq-web created</p> <p>W1018 16:54:39.757566   34060 shim_kubectl.go:58] Using non-groupfied API resources is deprecated and will be removed in a future release, update apiVersion to \"route.openshift.io/v1\" for your resource</p> <p>route.route.openshift.io/mq-web created</p> <p>secret/mq-secret created</p> <p>statefulset.apps/mq created</p>"},{"location":"DemoPreparation-CloudShell/#update-the-environment-variables-with-ibm-container-entitlement-key-and-e-mail-address","title":"Update the environment variables with IBM container entitlement key and e-mail address","text":"<p>The next steps require editing of a file using the vi editor. If you are not familiar with the vi editor, it is strongly recommend to watch the following video before proceeding. There is no audio for this video.</p> <p></p> <ol> <li>Open the vi editor.</li> </ol> <pre><code>vi  env.sh\n</code></pre> <ol> <li>Open the IBM Entitlement key page here.</li> </ol> <p>Note, re-authentication to ibm.com may be required.</p> <ol> <li>If an entitlement key does not already exist, click Add new key.</li> </ol> <p></p> <ol> <li>Click the Copy button.</li> </ol> <p></p> <ol> <li>Return to the IBM Cloud Shell window, use the arrow keys to move the cursor between the quotes in the export APIKEY line, press i to enter input mode, and paste the copied entitlement key between the quotes.</li> <li>Press the esc key to exit input mode.</li> <li>Arrow key down and over to between the quotes in the export EMAIL=\"\" line and enter a your e-mail address.</li> <li>Press the esc key to exit input mode.</li> <li>Move cursor between the quotes on the export EMAIL=\"\" line, press i to enter input mode, and enter your e-mail address.</li> <li>Press the : key and then the x key and enter to save and exit the vi editor.</li> <li>Verify the env.sh file looks like the example output below.</li> </ol> <pre><code>cat env.sh\n</code></pre> <p>Example output</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$ cat env.sh</p> <p>#!/usr/bin/bash</p> <p>## Locate your APIKEY (Entitlement Key For Container Software)</p> <p>## here: https://myibm.ibm.com/products-services/containerlibrary</p> <p>## Requires IBM ID and permission.</p> <p>export PROJECT_NAME=\"b2bi\"</p> <p>export PROJECT_DIR=\"$HOME/b2bi\"</p> <p>export DB2_NAME=\"db2\"</p> <p>export MQ_NAME=\"mq\"</p> <p>export APIKEY=\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"</p> <p>export EMAIL=\"andrew@jones-tx.com\"</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$</p>"},{"location":"DemoPreparation-CloudShell/#install-b2bi-in-the-openshift-cluster","title":"Install B2Bi in the OpenShift cluster","text":"<ol> <li>Deploy the B2Bi related containers on OpenShift.</li> </ol> <pre><code>./deploy_b2bi.sh\n</code></pre> <p>This will take approximately 10 minutes</p> <p>This command will take approximately 10 minutes to complete.</p> Optional: monitor events in the OpenShift web console <p>Use the OpenShift web console to monitor the b2bi project events and pod creation. </p> <p></p> Example output <p>Now using project \"b2bi\" on server \"https://c103-e.us-south.containers.cloud.ibm.com:31501\".</p> <p>You can add applications to this project with the 'new-app' command. For example, try:</p> <p>oc new-app rails-postgresql-example</p> <p>to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:</p> <p>kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname</p> <p>persistentvolumeclaim/ibm-cloud-file-nfs-storage-pvc created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:anyuid added: \"default\" deployment.apps/ibm-cloud-file-nfs-storage-pod created Defaulted container \"ibm-cloud-file-nfs-storage-pod\" out of: ibm-cloud-file-nfs-storage-pod, permissionsfix (init)</p> <p>... Long output - truncated in this example ...</p> <ol> <li>Set environment variables for final install step.</li> </ol> <pre><code>export DB2_IP=$(oc get svc db2-ci -n ${DB2_NAME} -o jsonpath='{.spec.clusterIP}')\nexport MQ_IP=$(oc get svc mq-data -n ${MQ_NAME} -o jsonpath='{.spec.clusterIP}')\nexport INGRESS_SUBDOMAIN=$(oc get IngressController default -n openshift-ingress-operator -o jsonpath='{.status.domain}')\n</code></pre> <ol> <li>Finalize the B2Bi install Yet Another Markup Language (YAML) file.</li> </ol> <pre><code>envsubst &lt; $PROJECT_DIR/ibm-b2bi-prod/values.yaml &gt; b2biInstall.yaml\n</code></pre> <ol> <li>Run the helm chart to install the B2Bi containers in OpenShift.</li> </ol> <pre><code>helm install sterling-fg $PROJECT_DIR/ibm-b2bi-prod --timeout 120m0s --namespace ${PROJECT_NAME} --values b2biInstall.yaml --debug\n</code></pre> <p>This will take approximately 60 minutes</p> <p>This command will take approximately 60 minutes to complete.</p> Learn an interesting detail about IBM Cloud Shell while you wait... <p>IBM Cloud Shell is a very useful tool when working with IBM Cloud command line interfaces as well as other Cloud-related tools like Red Hat OpenShift, kubernetes, helm, etc. as many of these tools are preinstalled and alleviate the need to install tools on personal workstations. However, IBM Cloud Shell has some limitations that you can read about here.</p> <p>One additional limitation not listed in the above doc is that IBM Cloud Shell will kill long running processes running in scripts (e.g. bash scripts). This issue was encountered while creating these installation scripts.  Originally, steps 37 through 39 above were contained in the deploy_b2bi.sh script. However, when executed, the deploy_b2bi.sh script would get killed (which in turn killed helm) after running approximately 20 minutes. By pulling the helm command out of the script and running it directly in the initial shell process, helm is able to complete the install of the B2Bi containers.</p> Example output <p>... Long output - truncated in this example ...</p> <p>NAME: sterling-fg</p> <p>LAST DEPLOYED: Wed Oct 19 17:11:30 2022</p> <p>NAMESPACE: b2bi</p> <p>STATUS: deployed</p> <p>REVISION: 1</p> <p>NOTES:</p> <p>Please wait while the application is getting deployed.</p> <ol> <li> <p>Run the below command to check the status of application server replica sets. At least 1 replica must be in 'READY' state.</p> <p>kubectl get replicasets -l release=sterling-fg -n b2bi</p> </li> <li> <p>Run the below command to check the status of the application server pods for the release.</p> <p>kubectl get pods -l release=sterling-fg -n b2bi -o wide</p> </li> </ol> <p>To view the logs for a pod, run the below command.</p> <pre><code>kubectl logs &lt;pod name&gt; -n b2bi\n</code></pre> <ol> <li>Access the application by running the following url</li> </ol> <p>Do not close the IBM Cloud Shell browser window/tab until the command completes. Once the command  successfully completes, the IBM Cloud Shell can be closed (type exit at the command prompt or simply close the browser window/tab).</p> <p>That concludes the setup of the environment. Proceed to the next part of the demonstration guide to configure B2Bi.</p>"},{"location":"DemoPreparation-VSI/","title":"DemoPreparation VSI","text":"<p>This demonstration requires two IBM Technology Zone (ITZ) environments: - Custom ROKS requests: https://techzone.ibm.com/collection/custom-roks-vmware-requests - IBM Cloud VSI (Classic): https://techzone.ibm.com/collection/base-images</p> <p>At this point, all users should have completed the steps in the IBM Sterling Data Exchange Level 3 learning plan to reserve the two environments as described in the IBM Sterling Data Exchange Level 3 Introduction video. Before proceeding, validate that both the reservations have been fully provisioned and are in the Ready state in ITZ. If not, please complete those steps before proceeding.</p> <p></p> <p>The following steps must be performed before delivering the demonstration. These steps should be performed well in advance of starting an actual client demonstration as it will take approximately 1 hour for all steps to complete.</p>"},{"location":"DemoPreparation-VSI/#accept-invitation-to-join-the-itz-ibm-cloud-account-for-the-custom-roks-reservation","title":"Accept invitation to join the ITZ IBM Cloud account for the Custom ROKS reservation","text":"<ol> <li>Open the You are invited to join an account in IBM Cloud email received from IBM Cloud and click the Join now link.</li> </ol> <ol> <li>In the browser window that opens, click the Join Account button.</li> </ol> <p>Follow the steps to login to IBM Cloud.</p> <ol> <li>On the IBM Cloud Dashboard set the current account to 2112072 - ITZ - V2.</li> </ol> <p></p> Not seeing 2112072 - ITZ - V2? <p>It is possible ITZ provisioned the OpenShift cluster in a different IBM Cloud account. Select the account specified in the ITZ reservation. </p> <ol> <li>Click the OpenShift  icon in the left-hand menu bar.</li> </ol> <p></p> <ol> <li>Click Clusters.</li> </ol> <p></p> <ol> <li>Click the OpenShift cluster name in the table.</li> </ol> <p></p> <p>Note: the cluster name will be different than seen in the above image.</p> <ol> <li>Click the OpenShift web console button.</li> </ol> <p></p> <p>At this time, a page like the one below should be in a new browser window or tab.</p> <p></p> <p>Leave this window open. It will be used again later.</p>"},{"location":"DemoPreparation-VSI/#download-the-ssh-key-from-the-ibm-cloud-vsi-classic-reservations","title":"Download the SSH key from the IBM Cloud VSI (Classic) reservations","text":"<ol> <li> <p>Open a new browser window or tab to the ITZ My reservations page.</p> </li> <li> <p>Click on the IBM Cloud VSI (Classic) reservation tile.</p> </li> </ol> <p></p> <ol> <li>Click the Download SSH Key button.</li> </ol> <p></p> <p>Take note</p> <p>Take note of the Public IP, SSH Port, and Username fields in the reservation. These values will be needed later.</p> <p>By default, most browsers will utilize the default Downloads directory in the users home directory.</p>"},{"location":"DemoPreparation-VSI/#connect-to-the-virtual-server-instance-vsi","title":"Connect to the Virtual Server Instance (VSI)","text":"<p>The next step must be performed on the users local computer. The directions below are specific to users with a Mac computer (MacOS). All instructions listed here should be the same for users running on Linux machines.</p> <p>For Windows machines users.</p> <p>Windows users will need to utilize a ssh client such as putty. XXXXXXX</p> <ol> <li>Open a terminal on local desktop computer using Mac Spotlight (press the command key and the space bar).</li> </ol> <p></p> <ol> <li>Enter the following command to change to the Downloads directory where the ITZ private key was downloaded.</li> </ol> <pre><code>cd Downloads\n</code></pre> <ol> <li>Verify the SSH key file is found in the Downloads directory.</li> </ol> <pre><code>ls -l pem_ibmcloudvsi_download.pem\n</code></pre> Example output <p>-rw-r--r--@ 1 andrewjones  staff  3243 Oct 18 13:12 pem_ibmcloudvsi_download.pem</p> No such file or directory? <p>If the file was not found, verify the default download directory of the browser used in step 11 above and try again adjusting for correct download directory. It is also possible the SSH key file name was not saved as pem_ibmcloudvsi_download.pem. Check the Downloads directory for the most recent file names.</p> <ol> <li>Change the permissions of the SSH key file.</li> </ol> <pre><code>chmod 0600 pem_ibmcloudvsi_download.pem\n</code></pre> <ol> <li>Verify the SSH key file has the proper permissions.</li> </ol> <pre><code>ls -l pem_ibmcloudvsi_download.pem\n</code></pre> Example output <p>-rw-------@ 1 andrewjones  staff  3243 Oct 18 13:12 pem_ibmcloudvsi_download.pem</p> <ol> <li>Use ssh to connect to the remote VSI and enter yes when prompted to continue.</li> </ol> <p>Warning</p> <p>Substitute the strings PORT, USER, and PUBLICIP with the values in the VSI reservation as illustrated in the image in step 11 above.</p> <p><code>ssh  -i pem_ibmcloudvsi_download.pem -p SSHPORT USERNAME@PUBLICIP</code></p> Example output <p>MacBook-Pro-2:Downloads andrewjones$ ssh -i pem_ibmcloudvsi_download.pem -p 2223 itzuser@169.59.6.211</p> <p>The authenticity of host '[169.59.6.211]:2223 ([169.59.6.211]:2223)' can't be established.</p> <p>ED25519 key fingerprint is SHA256:YAN8U3PtpCzdhqc67F8ZQWlJjQgBV0DOi7LvZgDEtws.</p> <p>This key is not known by any other names</p> <p>Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</p> <p>Warning: Permanently added '[169.59.6.211]:2223' (ED25519) to the list of known hosts.</p> <p>Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-124-generic x86_64)</p> <pre><code>...\n**Long output - truncated in this example**\n...\n</code></pre> <p>To run a command as administrator (user \"root\"), use \"sudo \". See \"man sudo_root\" for details.</p>"},{"location":"DemoPreparation-VSI/#install-all-required-ibm-cloud-and-other-tools","title":"Install all required IBM Cloud and other tools","text":"<ol> <li>Use the following command to install all required tools.</li> </ol> <pre><code>bash &lt;(curl -sL https://ibm.biz/ocp-cli)\n</code></pre> <p>Example output</p> <p>Updating the operating system. Wait!</p> <p>Installing Docker. Wait!</p> <p>Adding user to docker group. Wait!</p> <p>Setting up docker to start at reboot. Wait!</p> <p>Installing common utilities. Wait!</p> <p>Installing ibmcloud utility. Wait!</p> <p>Installing Helm. Wait!</p> <p>Installing OpenShift oc utility. Wait!</p> <p>Installing Kubernetes kubectl. Wait!</p> <p>cleaning up. Wait!</p> <p>All done.</p> <p>Client Version: 4.10.0</p> <p>version.BuildInfo{Version:\"v3.10.1\", GitCommit:\"9f88ccb6aee40b9a0535fcc7efea6055e1ef72c9\", GitTreeState:\"clean\", GoVersion:\"go1.18.7\"}</p> <p>Flag --short has been deprecated, and will be removed in the future. The --short output will</p> <p>become the default.</p> <p>Client Version: v1.25.3</p> <p>Kustomize Version: v4.5.7</p> <p>ibmcloud version 2.11.1+c18277d-2022-09-23T21:49:24+00:00</p> <p>Reboot your instance now: sudo shutdown -r now</p> <p>If the reboot message is not seen</p> <p>If the reboot message is not seen in the output of the previous command a problem occurred. Re-run the last command.  When doing so, ignore error messages about items already installed.</p> <ol> <li>Restart the VSI.</li> </ol> <pre><code>sudo shutdown -r now\n</code></pre> Example output <p>Connection to PUBLICIP closed by remote host. Connection to PUBLICIP closed.</p> <p>Note, it will take a few minutes for the VSI to reboot. Wait 2 or 3 minutes and then continue the steps below.</p>"},{"location":"DemoPreparation-VSI/#download-the-b2bi-installation-scripts","title":"Download the B2Bi installation scripts","text":"<ol> <li>Use ssh to re-connect to the remote VSI.</li> </ol> <p>Warning</p> <p>Substitute the strings PORT, USER, and PUBLICIP with the values in the VSI reservation as illustrated in the image in step 11 above.</p> <p><code>ssh  -i pem-ibmcloudvsi-download.pem -p SSHPORT USERNAME@PUBLICIP</code></p> Example output <p>MacBook-Pro-2:Downloads andrewjones$ ssh -i pem_ibmcloudvsi_download.pem -p 2223 itzuser@169.59.6.211 Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-124-generic x86_64)</p> <ul> <li>Documentation:  https://help.ubuntu.com</li> <li>Management:     https://landscape.canonical.com</li> <li>Support:        https://ubuntu.com/advantage</li> </ul> <p>System information as of Tue Oct 18 19:58:23 UTC 2022</p> <p>System load:  0.65              Users logged in:          0 Usage of /:   3.0% of 97.26GB   IPv4 address for docker0: 172.17.0.1 Memory usage: 7%                IPv4 address for eth0:    10.36.166.233 Swap usage:   0%                IPv4 address for eth1:    169.59.6.211 Processes:    123</p> <p>8 updates can be applied immediately. 8 of these updates are standard security updates. To see these additional updates run: apt list --upgradable</p> <p>New release '22.04.1 LTS' available. Run 'do-release-upgrade' to upgrade to it.</p> <p>Last login: Tue Oct 18 19:47:57 2022 from 70.114.143.247</p> <ol> <li>Create a new directory B2Bi installation scripts.</li> </ol> <pre><code>mkdir b2bi\n</code></pre> <ol> <li>Set the PROJECT_DIR environment variable.</li> </ol> <pre><code>export PROJECT_DIR=$HOME/b2bi\n</code></pre> <ol> <li>Change directories to PROJECT_DIR.</li> </ol> <pre><code>cd $PROJECT_DIR\n</code></pre> <ol> <li>Download the B2Bi installation script.</li> </ol> <pre><code>wget -O rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip?raw=true\n</code></pre> Example output <p>--2022-10-18 20:12:56--  https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/blob/main/tools/rapid-lab-b2bi-newdb-61051.zip?raw=true</p> <p>Resolving github.com (github.com)... 140.82.113.4</p> <p>Connecting to github.com (github.com)|140.82.113.4|:443... connected.</p> <p>HTTP request sent, awaiting response... 302 Found</p> <p>Location: https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-61051.zip [following]</p> <p>--2022-10-18 20:12:56--  https://github.com/IBM/SalesEnablement-SterlingDataExchange-L3/raw/main/tools/rapid-lab-b2bi-newdb-61051.zip</p> <p>Reusing existing connection to github.com:443.</p> <p>HTTP request sent, awaiting response... 302 Found</p> <p>Location: https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-61051.zip [following]</p> <p>--2022-10-18 20:12:57--  https://raw.githubusercontent.com/IBM/SalesEnablement-SterlingDataExchange-L3/main/tools/rapid-lab-b2bi-newdb-61051.zip</p> <p>Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...</p> <p>Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.</p> <p>HTTP request sent, awaiting response... 200 OK</p> <p>Length: 4061226 (3.9M) [application/zip]</p> <p>Saving to: \u2018rapid-lab-b2bi-newlab-61051.zip\u2019</p> <p>rapid-lab-b2bi-newlab-61051.zip                             100%[=========================================================================================================================================&gt;]   3.87M  --.-KB/s    in 0.03s</p> <p>2022-10-18 20:12:57 (147 MB/s) - \u2018rapid-lab-b2bi-newlab-61051.zip\u2019 saved [4061226/4061226]</p> <ol> <li>Unzip the installation script.</li> </ol> <pre><code>unzip rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip\n</code></pre> Example output <p>Archive:  rapid-lab-b2bi-newdb-6122-ocpodf-bastion.zip</p> <p>inflating: deploy_mq.sh</p> <p>inflating: edited-values.yaml</p> <p>inflating: prepare_db2.sh</p> <p>inflating: deploy_db2.sh</p> <p>inflating: README.md</p> <p>inflating: COPYING</p> <p>inflating: env.sh</p> <p>inflating: deploy_b2bi.sh</p> <p>inflating: db2jcc4.jar</p>"},{"location":"DemoPreparation-VSI/#authenticate-to-the-openshift-cluster","title":"Authenticate to the OpenShift cluster","text":"<p>For the next steps, the OpenShift login command to authenticate to the cluster in the ITZ reservation must be retrieved an executed.</p> <ol> <li>Switch to the OpenShift web console browser window or tab.</li> </ol> <p></p> <ol> <li>Click the IAM identity drop-down menu at top left of the OpenShift web console and click the Copy Login Command option.</li> </ol> <p></p> <ol> <li>Click the Display token link.</li> </ol> <p></p> <ol> <li>Copy and paste the string in the Log in with this token field.</li> </ol> <p></p> <ol> <li>Switch to the SSH terminal window from earlier.</li> <li>Paste the oc login command line copied in step 29 into the terminal window and press enter.</li> </ol> <p>Example output</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$ oc login --token=sha256~XXXXXXXXXXXXXXXXXX --server=https://c103-e.us-south.containers.cloud.ibm.com:31501</p> <p>Logged into \"https://c103-e.us-south.containers.cloud.ibm.com:31501\" as \"IAM#andrew@jones-tx.com\" using the token provided.</p> <p>You have access to 66 projects, the list has been suppressed. You can list all projects with 'oc projects'</p> <p>Using project \"default\".</p> <p>Welcome! See 'oc help' to get started.</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$</p> <ol> <li>Run the environment setup and Db2 deploy scripts.</li> </ol> <pre><code>. env.sh ; ./deploy_db2.sh\n</code></pre> Example output <p>Now using project \"db2\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\".</p> <p>You can add applications to this project with the 'new-app' command. For example, try:</p> <p>oc new-app rails-postgresql-example</p> <p>to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:</p> <p>kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname</p> <p>serviceaccount/db2 created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"db2\" secret/db2-secret created service/db2-ci created service/db2-lb created statefulset.apps/db2 created</p> <p>Wait 5 minutes...</p> <p>Wait approximately 5 minutes for the Db2 containers to start loading in OpenShift before executing the next step.</p> Monitor events in OpenShift web console <p>Use the OpenShift web console to monitor the Db2 project events and pod creation.  </p> <ol> <li>Verify Db2 is up and running in the OpenShift cluster.</li> </ol> <pre><code>oc logs -f ${DB2_NAME}-0\n</code></pre> <p>Failure</p> <p>If no output is seen from the above command, or if it returns the message: Error from server (BadRequest): container \"db2\" in pod \"db2-0\" is waiting to start: ContainerCreating  wait and rerun oc logs -f ${DB2_NAME}-0 until the output starts steaming as shown in the example output below.</p> <p>Example output</p> <p>(*) Previous setup has not been detected. Creating the users...</p> <p>(*) Creating users ...</p> <p>(*) Creating instance ...</p> <p>DB2 installation is being initialized.</p> <p>Total number of tasks to be performed: 4 Total estimated time for all tasks to be performed: 309 second(s)</p> <p>Task #1 start Description: Setting default global profile registry variables Task #1 end</p> <p>Task #2 start Description: Initializing instance list Estimated time 5 second(s) Task #2 end</p> <p>Task #3 start Description: Configuring DB2 instances Estimated time 300 second(s) Task #3 end</p> <p>Task #4 start Description: Updating global profile registry Estimated time 3 second(s) Task #4 end</p> <pre><code>...\n**Long output - truncated in this example**\n...\n</code></pre> <p>2022-10-18-16.44.43.180954+000 I33681E386            LEVEL: Warning PID     : 15858                TID : 139996146354048 PROC : db2start</p> <p>INSTANCE: db2inst1             NODE : 000</p> <p>HOSTNAME: db2-0</p> <p>FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078</p> <p>MESSAGE : Released lock on the file:</p> <p>DATA #1 : String, 50 bytes</p> <p>/database/config/db2inst1/sqllib/ctrl/db2strst.lck</p> <p>Do not proceed until...</p> <p>Do not proceed to the next step until the following line appears in the output:</p> <p>/database/config/db2inst1/sqllib/ctrl/db2strst.lck</p> <ol> <li>Stop the oc logs command by entering Ctrl+c on the keyboard.</li> </ol> <p>Example output</p> <p>... FUNCTION: DB2 UDB, base sys utilities, sqleReleaseStStLockFile, probe:16078</p> <p>MESSAGE : Released lock on the file:</p> <p>DATA #1 : String, 50 bytes</p> <p>/database/config/db2inst1/sqllib/ctrl/db2strst.lck</p> <p>^C</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$</p> <ol> <li>Prepare the Db2 instance running in OpenShift.</li> </ol> <pre><code>./prepare_db2.sh\n</code></pre> <p>Note, this script does not generate output.</p> <ol> <li>Remotely connect to the Db2 container running in OpenShift.</li> </ol> <pre><code>oc rsh pod/${DB2_NAME}-0 su - db2inst1\n</code></pre> <p>Example output</p> <p>Last login: Tue Oct 18 20:47:33 UTC 2022</p> <p>[db2inst1@db2-0 ~]$</p> <p>Note, a remote connection is now open to the Db2 container running in OpenShift as shown by the change in the command prompt to: [db2inst1@db2-0 ~]$</p> <ol> <li>Run the db2reg.sh script.</li> </ol> <pre><code>./db2reg.sh\n</code></pre> Example output <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <p>DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed successfully.</p> <ol> <li>Create the B2Bi tables in Db2.</li> </ol> <pre><code>db2 -stvf create_scc_db_b2bidb.sql\n</code></pre> <p>This will take ~5 minutes</p> <p>This command will take approximately 5 minutes to complete.</p> Example output <p>CREATE DATABASE B2BIDB AUTOMATIC STORAGE YES USING CODESET UTF-8 TERRITORY US COLLATE USING IDENTITY PAGESIZE 4096 DFT_EXTENT_SZ 32</p> <p>DB20000I  The CREATE DATABASE command completed successfully.</p> <p>CONNECT TO B2BIDB</p> <p>Database Connection Information</p> <p>Database server        = DB2/LINUXX8664 11.5.5.1  SQL authorization ID   = DB2INST1  Local database alias   = B2BIDB</p> <p>UPDATE DATABASE CONFIG USING STMT_CONC LITERALS</p> <p>DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.</p> <p>... Long output - truncated in this example ...</p> <p>CREATE USER TEMPORARY TABLESPACE UTEMP4KTS IN DATABASE PARTITION GROUP IBMDEFAULTGROUP PAGESIZE 4 K MANAGED BY AUTOMATIC STORAGE EXTENTSIZE 32 BUFFERPOOL UTEMP4KBP FILE SYSTEM CACHING</p> <p>DB20000I  The SQL command completed successfully.</p> <p>CONNECT RESET</p> <p>DB20000I  The SQL command completed successfully.</p> <ol> <li>Run the final Db2 update script.</li> </ol> <pre><code>./db2-update.sh\n</code></pre> Example output <p>Database Connection Information</p> <p>Database server        = DB2/LINUXX8664 11.5.5.1 SQL authorization ID   = DB2INST1 Local database alias   = B2BIDB</p> <p>DB20000I  The SQL command completed successfully. DB20000I  The TERMINATE command completed successfully. DB20000I  The FORCE APPLICATION command completed successfully. DB21024I  This command is asynchronous and may not be effective immediately.</p> <p>DB20000I  The DEACTIVATE DATABASE command completed successfully.</p> <p>10/18/2022 16:53:39     0   0   SQL1064N  DB2STOP processing was successful.</p> <p>SQL1064N  DB2STOP processing was successful.</p> <p>10/18/2022 16:53:41     0   0   SQL1063N  DB2START processing was successful.</p> <p>SQL1063N  DB2START processing was successful.</p> <ol> <li>Exit the connection to the Db2 container in OpenShift.</li> </ol> <pre><code>exit\n</code></pre> Example output <p>logout itzuser@itz-2700039nft-srv4:~/b2bi$</p> <p>Notice the command line prompt has changed back to the prompt for the VSI connection.</p> <ol> <li>Deploy MQ to OpenShift.</li> </ol> <pre><code>./deploy_mq.sh\n</code></pre> Example output <p>Now using project \"mq\" on server \"https://c109-e.us-east.containers.cloud.ibm.com:30720\".</p> <p>You can add applications to this project with the 'new-app' command. For example, try:</p> <p>oc new-app rails-postgresql-example</p> <p>to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:</p> <p>kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname</p> <p>serviceaccount/mq created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:privileged added: \"mq\" service/mq-data created service/mq-web created</p> <p>W1018 16:54:39.757566   34060 shim_kubectl.go:58] Using non-groupfied API resources is deprecated and will be removed in a future release, update apiVersion to \"route.openshift.io/v1\" for your resource</p> <p>route.route.openshift.io/mq-web created</p> <p>secret/mq-secret created</p> <p>statefulset.apps/mq created</p> <p>Important</p> <p>Note, the next steps require editing of a file using the vi editor on the VSI. If you are not familiar with the vi editor, it is strongly recommend to watch the following video before proceeding. There is no audio for this video.</p> <p></p> <ol> <li>Open the vi editor.</li> </ol> <pre><code>vi  env.sh\n</code></pre> <ol> <li>Open the IBM Entitlement key page here.</li> </ol> <p>Note, re-authentication to ibm.com may be required.</p> <ol> <li>If an entitlement key does not already exist, click Add new key.</li> <li>Click the Copy button.</li> </ol> <p></p> <ol> <li>Return to the terminal and paste the copied entitlement key between the quotes on the export APIKEY=\"\" line.</li> <li>Enter your e-mail address between the quotes on the export EMAIL=\"\" line.</li> <li>Verify the env.sh file looks like the example output below.</li> </ol> <pre><code>cat env.sh\n</code></pre> <p>Example output</p> <p>itzuser@itz-2700039nft-srv4:~/b2bi$ cat env.sh #!/usr/bin/bash ## Locate your APIKEY (Entitlement Key For Container Software) ## here: https://myibm.ibm.com/products-services/containerlibrary ## Requires IBM ID and permission. export PROJECT_NAME=\"b2bi\" export PROJECT_DIR=\"$HOME/b2bi\" export DB2_NAME=\"db2\" export MQ_NAME=\"mq\" export APIKEY=\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" export EMAIL=\"andrew@jones-tx.com\" itzuser@itz-2700039nft-srv4:~/b2bi$</p> <ol> <li>Deploy the B2Bi containers on OpenShift.</li> </ol> <pre><code>./deploy_b2bi.sh\n</code></pre> <p>This will take approximately 60 minutes</p> <p>This command will take approximately 60 minutes to complete.</p> Monitor events in OpenShift web console <p>Use the OpenShift web console to monitor the b2bi project events and pod creation. </p> <p></p> Example output <p>Now using project \"b2bi\" on server \"https://c103-e.us-south.containers.cloud.ibm.com:31501\".</p> <p>You can add applications to this project with the 'new-app' command. For example, try:</p> <p>oc new-app rails-postgresql-example</p> <p>to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:</p> <p>kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname</p> <p>persistentvolumeclaim/ibm-cloud-file-nfs-storage-pvc created clusterrole.rbac.authorization.k8s.io/system:openshift:scc:anyuid added: \"default\" deployment.apps/ibm-cloud-file-nfs-storage-pod created Defaulted container \"ibm-cloud-file-nfs-storage-pod\" out of: ibm-cloud-file-nfs-storage-pod, permissionsfix (init)</p> <p>... Long output - truncated in this example ...</p> <p>NAME: sterling-fg</p> <p>LAST DEPLOYED: Wed Oct 19 17:11:30 2022</p> <p>NAMESPACE: b2bi</p> <p>STATUS: deployed</p> <p>REVISION: 1</p> <p>NOTES:</p> <p>Please wait while the application is getting deployed.</p> <ol> <li> <p>Run the below command to check the status of application server replica sets. At least 1 replica must be in 'READY' state.</p> <p>kubectl get replicasets -l release=sterling-fg -n b2bi</p> </li> <li> <p>Run the below command to check the status of the application server pods for the release.</p> <p>kubectl get pods -l release=sterling-fg -n b2bi -o wide</p> </li> </ol> <p>To view the logs for a pod, run the below command.</p> <pre><code>kubectl logs &lt;pod name&gt; -n b2bi\n</code></pre> <ol> <li>Access the application by running the following url</li> </ol> <p>That concludes the setup of the environment. Proceed to the next part of the demonstration guide to configure B2Bi.</p>"},{"location":"NextSteps/","title":"Next Steps","text":"<p>This guide provided information to assist IBM and Business Partner sellers and technical sellers in installing and demonstrating IBM Sterling B2B Integrator. Links to specific B2Bi topics were provided throughout this demonstration guide.</p> <p>Finally, remember to complete the IBM Sterling Data Exchange Level 3 learning plan in either YourLearning (IBM employees) or learn.ibm.com (Business Partners).</p> <p>IBM Sales and IBM Technical sales must complete a Stand and Deliver exercise to validate their ability to demonstrate B2Bi to potential clients. Refer to the evaluation rubric in the learning plan when preparing the Stand and Deliver.</p> <p>Business Partners (both sellers and technical sellers) must pass the IBM Sterling Data Exchange Level 3 quiz from learn.ibm.com. Remember, take the quiz while the reservation to the TechZone environment is active. The Business Partner quiz verifies use of the demonstration environment and not general knowledge of the offering.</p>"},{"location":"Overview/","title":"Demonstration Overview","text":"<p>This demonstration assumes users have at least a basic knowledge of IBM Sterling B2B Integrator. Before proceeding, it is highly encouraged that users complete the IBM Sterling Data Exchange Level 2 learning plan. The plan is accessible to IBM employees here and Business Partners here.</p> <p>Before proceeding, take 10 minutes to listen to Tom Limanek, B2B subject matter expert, explain the full scope of IBM B2B Integrator and the history of all the standards it supports.</p> <p></p> <p>In this demonstration script, a secure partner-to-partner data exchange solution is created using IBM Sterling Business to Business Integrator (B2Bi). More specifically, this demonstration solution uses the IBM Certified Containers for IBM Sterling B2B Integrator version of B2Bi. This version provides enterprise-grade and security-rich product editions with integrated common software services for consistent-deployment lifecycle management, including easy install and configure options, management of upgrade and roll-back, scalability, and security.</p> <p>Learn more about B2Bi here and access the B2Bi product documentation here. This demonstration solution uses Secure File Transfer Protocol (SFTP) to allow two partners to exchange files in a secure manner.</p> <p>To create this demonstration solution, the containerized version of B2Bi will be deployed to a Red Hat OpenShift Cluster in IBM Technology Zone.</p> <p>This demonstration script consists of 3 installation and configuration chapters and a chapter describing a client demonstration scenario.</p> <p>It is now time to install B2Bi on a Red Hat OpenShift cluster.</p>"}]}